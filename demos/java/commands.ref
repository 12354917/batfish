# This demo operates over the example test rigs in the batfish repository.
# It assumes that it is being run from the top-level directory in the repository.
# Do this first, so you have the relevant shell commands
# % source tools/batfish_function.sh
# Select one of the two options below
## If you want to run analysis locally
## % allinone -runmode interactive
#
## If you want to run against www.batfish.org
## % batfish_client -runmode interactive
# load the testing
Init'ed and set active container
Uploaded testrig. Parsing now.
Status: SUCCESS
Question: null
{
  "class" : "org.batfish.datamodel.answers.ParseVendorConfigurationAnswerElement"
}
{
  "class" : "org.batfish.datamodel.answers.ConvertConfigurationAnswerElement",
  "undefinedReferences" : {
    "as2core2" : {
      "route-map" : [
        "filter-bogons"
      ]
    }
  },
  "unusedStructures" : {
    "as1border1" : {
      "bgp group" : [
        "as3"
      ],
      "community-list" : [
        "as1_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as1border2" : {
      "bgp group" : [
        "as2"
      ],
      "community-list" : [
        "as1_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as2border1" : {
      "bgp group" : [
        "as3"
      ],
      "community-list" : [
        "as2_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as2border2" : {
      "bgp group" : [
        "as1"
      ],
      "community-list" : [
        "as2_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as2dept1" : {
      "ip acl" : [
        "105",
        "RESTRICT_HOST_TRAFFIC_OUT"
      ]
    },
    "as2dist1" : {
      "ip acl" : [
        "102"
      ]
    },
    "as2dist2" : {
      "ip acl" : [
        "102"
      ]
    },
    "as3border1" : {
      "bgp group" : [
        "as1"
      ],
      "community-list" : [
        "as3_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as3border2" : {
      "bgp group" : [
        "as2"
      ],
      "community-list" : [
        "as3_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    }
  },
  "warnings" : {
    "as1border1" : {
      "Red flags" : {
        "1" : "MISCELLANEOUS: Could not determine update source for BGP neighbor: '3.2.2.2'",
        "2" : "MISCELLANEOUS: Could not determine update source for BGP neighbor: '5.6.7.8'",
        "3" : "UNUSED: Unused bgp peer-group/template: 'as3'",
        "4" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "5" : "UNUSED: Unused expanded community-list: 'as1_community'"
      }
    },
    "as1border2" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as2'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as1_community'"
      }
    },
    "as2border1" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as3'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as2_community'"
      }
    },
    "as2border2" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as1'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as2_community'"
      }
    },
    "as2core2" : {
      "Red flags" : {
        "1" : "UNDEFINED: neighbor: '2.1.1.1': group: 'as2': undefined reference to inbound route-map: 'filter-bogons'",
        "2" : "UNDEFINED: neighbor: '2.1.3.1': group: 'as2': undefined reference to inbound route-map: 'filter-bogons'",
        "3" : "UNDEFINED: neighbor: '2.1.1.2': group: 'as2': undefined reference to inbound route-map: 'filter-bogons'",
        "4" : "UNDEFINED: neighbor: '2.1.3.2': group: 'as2': undefined reference to inbound route-map: 'filter-bogons'"
      }
    },
    "as2dept1" : {
      "Red flags" : {
        "1" : "UNUSED: Unused extended access-list: '105'",
        "2" : "UNUSED: Unused extended access-list: 'RESTRICT_HOST_TRAFFIC_OUT'"
      }
    },
    "as2dist1" : {
      "Red flags" : {
        "1" : "UNUSED: Unused extended access-list: '102'"
      }
    },
    "as2dist2" : {
      "Red flags" : {
        "1" : "UNUSED: Unused extended access-list: '102'"
      }
    },
    "as3border1" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as1'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as3_community'"
      }
    },
    "as3border2" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as2'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as3_community'"
      }
    }
  }
}
Generating dataplane now
Status: SUCCESS
Question: null
Computation summary:
   OSPF-internal iterations: 8
   Dependent-routes iterations: 8
   BGP iterations: 8
   Total routes: 298

Generated dataplane
################
# The configurations are converted to JSON-based vendor-independent data model:
Status: SUCCESS
Question: {
  "class" : "org.batfish.question.NodesQuestionPlugin$NodesQuestion",
  "differential" : false,
  "nodeRegex" : "as2border1",
  "summary" : false
}
{
  "class" : "org.batfish.question.NodesQuestionPlugin$NodesAnswerElement",
  "nodes" : {
    "as1border1" : {
      "@id" : 1,
      "name" : "as1border1",
      "bgpProcess" : {
        "neighbors" : {
          "3.2.2.2/32" : {
            "@id" : 2,
            "name" : "3.2.2.2/32",
            "address" : "3.2.2.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 16843009,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:3.2.2.2~",
            "group" : "bad-ebgp",
            "localAs" : 1,
            "owner" : 1,
            "remoteAs" : 666,
            "remotePrefix" : "3.2.2.2/32",
            "routeReflectorClient" : false,
            "sendCommunity" : false
          },
          "5.6.7.8/32" : {
            "@id" : 3,
            "name" : "5.6.7.8/32",
            "address" : "5.6.7.8",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 16843009,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:5.6.7.8~",
            "group" : "xanadu",
            "localAs" : 1,
            "owner" : 1,
            "remoteAs" : 555,
            "remotePrefix" : "5.6.7.8/32",
            "routeReflectorClient" : false,
            "sendCommunity" : false
          },
          "1.10.1.1/32" : {
            "@id" : 4,
            "name" : "1.10.1.1/32",
            "address" : "1.10.1.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 16843009,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:1.10.1.1~",
            "group" : "as1",
            "localAs" : 1,
            "localIp" : "1.1.1.1",
            "owner" : 1,
            "remoteAs" : 1,
            "remotePrefix" : "1.10.1.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "10.12.11.2/32" : {
            "@id" : 5,
            "name" : "10.12.11.2/32",
            "address" : "10.12.11.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 16843009,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:10.12.11.2~",
            "group" : "as2",
            "importPolicy" : "as2_to_as1",
            "localAs" : 1,
            "localIp" : "10.12.11.1",
            "owner" : 1,
            "remoteAs" : 2,
            "remotePrefix" : "10.12.11.2/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          }
        },
        "routerId" : "1.1.1.1"
      },
      "communityLists" : {
        "as1_community" : {
          "@id" : 6,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          ],
          "name" : "as1_community",
          "invertMatch" : false
        },
        "as2_community" : {
          "@id" : 7,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          ],
          "name" : "as2_community",
          "invertMatch" : false
        },
        "as3_community" : {
          "@id" : 8,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          ],
          "name" : "as3_community",
          "invertMatch" : false
        }
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 9,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "1.0.1.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 10,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 1,
          "prefix" : "1.0.1.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 11,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "10.12.11.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 1,
          "prefix" : "10.12.11.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 12,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "1.1.1.1/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 10,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 1,
          "prefix" : "1.1.1.1/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "101" : {
          "@id" : 13,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.2.0"
              ]
            }
          ]
        },
        "102" : {
          "@id" : 14,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.0.0.0"
              ],
              "name" : "permit ip host 2.0.0.0 host 255.0.0.0",
              "negate" : false,
              "srcIps" : [
                "2.0.0.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.0.0"
              ],
              "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
              "negate" : false,
              "srcIps" : [
                "2.128.0.0"
              ]
            }
          ]
        },
        "103" : {
          "@id" : 15,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.2.0"
              ]
            }
          ]
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 10,
            "name" : 1,
            "interfaces" : [
              9,
              12
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "1.1.1.1"
      },
      "routeFilterLists" : {
        "101" : {
          "@id" : 16,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            }
          ]
        },
        "102" : {
          "@id" : 17,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "8-8",
              "prefix" : "2.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "16-16",
              "prefix" : "2.128.0.0/16"
            }
          ]
        },
        "103" : {
          "@id" : 18,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        },
        "default_list" : {
          "@id" : 19,
          "name" : "default_list",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "0-0",
              "prefix" : "0.0.0.0/0"
            }
          ]
        },
        "inbound_route_filter" : {
          "@id" : 20,
          "name" : "inbound_route_filter",
          "lines" : [
            {
              "action" : "REJECT",
              "lengthRange" : "8-32",
              "prefix" : "1.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "0-32",
              "prefix" : "0.0.0.0/0"
            }
          ]
        },
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 21,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 22,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            }
          ]
        }
      },
      "routingPolicies" : {
        "as1_to_as2" : {
          "@id" : 23,
          "name" : "as1_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "101"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "103"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "default_list"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as1_to_as3" : {
          "@id" : 24,
          "name" : "as1_to_as3",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "101"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "102"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as2_to_as1" : {
          "@id" : 25,
          "name" : "as2_to_as1",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as2_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as3_to_as1" : {
          "@id" : 26,
          "name" : "as3_to_as1",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as3_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 27,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:1.10.1.1~" : {
          "@id" : 28,
          "name" : "~BGP_PEER_EXPORT_POLICY:1.10.1.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:10.12.11.2~" : {
          "@id" : 29,
          "name" : "~BGP_PEER_EXPORT_POLICY:10.12.11.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "as1_to_as2"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:3.2.2.2~" : {
          "@id" : 30,
          "name" : "~BGP_PEER_EXPORT_POLICY:3.2.2.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:5.6.7.8~" : {
          "@id" : 31,
          "name" : "~BGP_PEER_EXPORT_POLICY:5.6.7.8~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 32,
          "name" : "~OSPF_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
              "metric" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                "value" : 20
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "OSPF export connected routes",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                "protocol" : "connected"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                  "metricType" : "E2"
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as1border1",
          "lines" : {
            "aux0" : {
              "@id" : 33,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 34,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 35,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 36,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 37,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 38,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 39,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as1border2" : {
      "@id" : 40,
      "name" : "as1border2",
      "bgpProcess" : {
        "neighbors" : {
          "1.10.1.1/32" : {
            "@id" : 41,
            "name" : "1.10.1.1/32",
            "address" : "1.10.1.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 16908802,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:1.10.1.1~",
            "group" : "as1",
            "localAs" : 1,
            "localIp" : "1.2.2.2",
            "owner" : 40,
            "remoteAs" : 1,
            "remotePrefix" : "1.10.1.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "10.14.22.4/32" : {
            "@id" : 42,
            "name" : "10.14.22.4/32",
            "address" : "10.14.22.4",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 16908802,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:10.14.22.4~",
            "group" : "as4",
            "importPolicy" : "as4_to_as1",
            "localAs" : 1,
            "localIp" : "10.14.22.1",
            "owner" : 40,
            "remoteAs" : 4,
            "remotePrefix" : "10.14.22.4/32",
            "routeReflectorClient" : false,
            "sendCommunity" : false
          },
          "10.13.22.3/32" : {
            "@id" : 43,
            "name" : "10.13.22.3/32",
            "address" : "10.13.22.3",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 16908802,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:10.13.22.3~",
            "group" : "as3",
            "importPolicy" : "as3_to_as1",
            "localAs" : 1,
            "localIp" : "10.13.22.1",
            "owner" : 40,
            "remoteAs" : 3,
            "remotePrefix" : "10.13.22.3/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          }
        },
        "routerId" : "1.2.2.2"
      },
      "communityLists" : {
        "as1_community" : {
          "@id" : 44,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          ],
          "name" : "as1_community",
          "invertMatch" : false
        },
        "as2_community" : {
          "@id" : 45,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          ],
          "name" : "as2_community",
          "invertMatch" : false
        },
        "as3_community" : {
          "@id" : 46,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          ],
          "name" : "as3_community",
          "invertMatch" : false
        },
        "as4_community" : {
          "@id" : 47,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )4:"
            }
          ],
          "name" : "as4_community",
          "invertMatch" : false
        }
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 48,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "1.0.2.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 49,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 40,
          "prefix" : "1.0.2.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 50,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "10.13.22.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 40,
          "prefix" : "10.13.22.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/2" : {
          "@id" : 51,
          "name" : "FastEthernet0/2",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "10.14.22.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 40,
          "prefix" : "10.14.22.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 52,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "1.2.2.2/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 49,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 40,
          "prefix" : "1.2.2.2/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "101" : {
          "@id" : 53,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.2.0"
              ]
            }
          ]
        },
        "102" : {
          "@id" : 54,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.0.0.0"
              ],
              "name" : "permit ip host 2.0.0.0 host 255.0.0.0",
              "negate" : false,
              "srcIps" : [
                "2.0.0.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.0.0"
              ],
              "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
              "negate" : false,
              "srcIps" : [
                "2.128.0.0"
              ]
            }
          ]
        },
        "103" : {
          "@id" : 55,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.2.0"
              ]
            }
          ]
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 49,
            "name" : 1,
            "interfaces" : [
              48,
              52
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "1.2.2.2"
      },
      "routeFilterLists" : {
        "101" : {
          "@id" : 56,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            }
          ]
        },
        "102" : {
          "@id" : 57,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "8-8",
              "prefix" : "2.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "16-16",
              "prefix" : "2.128.0.0/16"
            }
          ]
        },
        "103" : {
          "@id" : 58,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        },
        "as4-prefixes" : {
          "@id" : 59,
          "name" : "as4-prefixes",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "8-32",
              "prefix" : "4.0.0.0/8"
            }
          ]
        },
        "inbound_route_filter" : {
          "@id" : 60,
          "name" : "inbound_route_filter",
          "lines" : [
            {
              "action" : "REJECT",
              "lengthRange" : "8-32",
              "prefix" : "1.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "0-32",
              "prefix" : "0.0.0.0/0"
            }
          ]
        },
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 61,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 62,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            }
          ]
        }
      },
      "routingPolicies" : {
        "as1_to_as2" : {
          "@id" : 63,
          "name" : "as1_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "101"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "103"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as1_to_as3" : {
          "@id" : 64,
          "name" : "as1_to_as3",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "101"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "102"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as1_to_as4" : {
          "@id" : 65,
          "name" : "as1_to_as4",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
              "metric" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                "value" : 50
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
              "expr" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                "communities" : [
                  {
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                      "value" : 1
                    },
                    "suffix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                      "value" : 4
                    }
                  }
                ]
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitAccept"
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as2_to_as1" : {
          "@id" : 66,
          "name" : "as2_to_as1",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as2_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as3_to_as1" : {
          "@id" : 67,
          "name" : "as3_to_as1",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as3_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as4_to_as1" : {
          "@id" : 68,
          "name" : "as4_to_as1",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "as4-prefixes"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                      "name" : "as4_community"
                    }
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 69,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:1.10.1.1~" : {
          "@id" : 70,
          "name" : "~BGP_PEER_EXPORT_POLICY:1.10.1.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:10.13.22.3~" : {
          "@id" : 71,
          "name" : "~BGP_PEER_EXPORT_POLICY:10.13.22.3~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "as1_to_as3"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:10.14.22.4~" : {
          "@id" : 72,
          "name" : "~BGP_PEER_EXPORT_POLICY:10.14.22.4~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "as1_to_as4"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 73,
          "name" : "~OSPF_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
              "metric" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                "value" : 20
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "OSPF export connected routes",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                "protocol" : "connected"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                  "metricType" : "E2"
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as1border2",
          "lines" : {
            "aux0" : {
              "@id" : 74,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 75,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 76,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 77,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 78,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 79,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 80,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as1core1" : {
      "@id" : 81,
      "name" : "as1core1",
      "bgpProcess" : {
        "neighbors" : {
          "1.2.2.2/32" : {
            "@id" : 82,
            "name" : "1.2.2.2/32",
            "address" : "1.2.2.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 17432833,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:1.2.2.2~",
            "group" : "as1",
            "localAs" : 1,
            "localIp" : "1.10.1.1",
            "owner" : 81,
            "remoteAs" : 1,
            "remotePrefix" : "1.2.2.2/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          },
          "1.1.1.1/32" : {
            "@id" : 83,
            "name" : "1.1.1.1/32",
            "address" : "1.1.1.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 17432833,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:1.1.1.1~",
            "group" : "as1",
            "localAs" : 1,
            "localIp" : "1.10.1.1",
            "owner" : 81,
            "remoteAs" : 1,
            "remotePrefix" : "1.1.1.1/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          }
        },
        "routerId" : "1.10.1.1"
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 84,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "1.0.1.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 85,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 81,
          "prefix" : "1.0.1.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 86,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "1.0.2.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 85,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 81,
          "prefix" : "1.0.2.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 87,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "1.10.1.1/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 85,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 81,
          "prefix" : "1.10.1.1/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 85,
            "name" : 1,
            "interfaces" : [
              84,
              86,
              87
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "1.10.1.1"
      },
      "routeFilterLists" : {
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 88,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 89,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
        }
      },
      "routingPolicies" : {
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 90,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:1.1.1.1~" : {
          "@id" : 91,
          "name" : "~BGP_PEER_EXPORT_POLICY:1.1.1.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:1.2.2.2~" : {
          "@id" : 92,
          "name" : "~BGP_PEER_EXPORT_POLICY:1.2.2.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 93,
          "name" : "~OSPF_EXPORT_POLICY~"
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as1core1",
          "lines" : {
            "aux0" : {
              "@id" : 94,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 95,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 96,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 97,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 98,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 99,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 100,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as2border1" : {
      "@id" : 101,
      "name" : "as2border1",
      "aggregateRoutes" : [
        {
          "class" : "org.batfish.datamodel.GeneratedRoute",
          "network" : "2.128.0.0/16",
          "administrativeCost" : 200,
          "discard" : true,
          "generationPolicy" : "~AGGREGATE_ROUTE_GEN:2.128.0.0/16~"
        }
      ],
      "bgpProcess" : {
        "neighbors" : {
          "2.1.2.2/32" : {
            "@id" : 102,
            "name" : "2.1.2.2/32",
            "address" : "2.1.2.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620225,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.2.2~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.1.1",
            "owner" : 101,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.2.2/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "10.12.11.1/32" : {
            "@id" : 103,
            "name" : "10.12.11.1/32",
            "address" : "10.12.11.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620225,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:10.12.11.1~",
            "group" : "as1",
            "importPolicy" : "as1_to_as2",
            "localAs" : 2,
            "localIp" : "10.12.11.2",
            "owner" : 101,
            "remoteAs" : 1,
            "remotePrefix" : "10.12.11.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "2.1.2.1/32" : {
            "@id" : 104,
            "name" : "2.1.2.1/32",
            "address" : "2.1.2.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620225,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.2.1~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.1.1",
            "owner" : 101,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.2.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          }
        },
        "routerId" : "2.1.1.1"
      },
      "communityLists" : {
        "as1_community" : {
          "@id" : 105,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          ],
          "name" : "as1_community",
          "invertMatch" : false
        },
        "as2_community" : {
          "@id" : 106,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          ],
          "name" : "as2_community",
          "invertMatch" : false
        },
        "as3_community" : {
          "@id" : 107,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          ],
          "name" : "as3_community",
          "invertMatch" : false
        }
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 108,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "10.12.11.2/24"
          ],
          "bandwidth" : 1.0E8,
          "incomingFilter" : 109,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "outgoingFilter" : 110,
          "owner" : 101,
          "prefix" : "10.12.11.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 111,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.12.11.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 112,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 101,
          "prefix" : "2.12.11.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/0" : {
          "@id" : 113,
          "name" : "FastEthernet1/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.12.12.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 112,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 101,
          "prefix" : "2.12.12.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 114,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.1.1.1/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 112,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 101,
          "prefix" : "2.1.1.1/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "101" : {
          "@id" : 115,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.2.0"
              ]
            }
          ]
        },
        "103" : {
          "@id" : 116,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.2.0"
              ]
            }
          ]
        },
        "INSIDE_TO_OUTSIDE" : {
          "@id" : 110,
          "name" : "INSIDE_TO_OUTSIDE",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "1.0.0.0/8"
              ],
              "name" : "permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255",
              "negate" : false,
              "srcIps" : [
                "2.0.0.0/8"
              ]
            },
            {
              "action" : "REJECT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "deny ip any any",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            }
          ]
        },
        "OUTSIDE_TO_INSIDE" : {
          "@id" : 109,
          "name" : "OUTSIDE_TO_INSIDE",
          "lines" : [
            {
              "action" : "REJECT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "deny ip 2.0.0.0 0.255.255.255 any",
              "negate" : false,
              "srcIps" : [
                "2.0.0.0/8"
              ]
            },
            {
              "action" : "REJECT",
              "dstIps" : [
                "2.128.1.101"
              ],
              "name" : "deny ip any host 2.128.1.101",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "permit ip any any",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            }
          ]
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 112,
            "name" : 1,
            "interfaces" : [
              111,
              113,
              114
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "2.1.1.1"
      },
      "routeFilterLists" : {
        "101" : {
          "@id" : 117,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            }
          ]
        },
        "103" : {
          "@id" : 118,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        },
        "inbound_route_filter" : {
          "@id" : 119,
          "name" : "inbound_route_filter",
          "lines" : [
            {
              "action" : "REJECT",
              "lengthRange" : "8-32",
              "prefix" : "2.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "0-32",
              "prefix" : "0.0.0.0/0"
            }
          ]
        },
        "outbound_routes" : {
          "@id" : 120,
          "name" : "outbound_routes",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "16-32",
              "prefix" : "2.128.0.0/9"
            }
          ]
        },
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 121,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "16-16",
              "prefix" : "2.128.0.0/16"
            }
          ]
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 122,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
        },
        "~MATCH_SUPPRESSED_SUMMARY_ONLY~" : {
          "@id" : 123,
          "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "17-32",
              "prefix" : "2.128.0.0/16"
            }
          ]
        }
      },
      "routingPolicies" : {
        "as1_to_as2" : {
          "@id" : 124,
          "name" : "as1_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as1_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as2_to_as1" : {
          "@id" : 125,
          "name" : "as2_to_as1",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "outbound_routes"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "103"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 100
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as2_to_as3" : {
          "@id" : 126,
          "name" : "as2_to_as3",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "101"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "outbound_routes"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as3_to_as2" : {
          "@id" : 127,
          "name" : "as3_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as3_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "~AGGREGATE_ROUTE_GEN:2.128.0.0/16~" : {
          "@id" : 128,
          "name" : "~AGGREGATE_ROUTE_GEN:2.128.0.0/16~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                  "prefixSpace" : [
                    "2.128.0.0/16:17-32"
                  ]
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            }
          ]
        },
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 129,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "Suppress summarized of summary-only aggregate-address networks",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY~"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnFalse"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:10.12.11.1~" : {
          "@id" : 130,
          "name" : "~BGP_PEER_EXPORT_POLICY:10.12.11.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "as2_to_as1"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.2.1~" : {
          "@id" : 131,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.2.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.2.2~" : {
          "@id" : 132,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.2.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 133,
          "name" : "~OSPF_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
              "metric" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                "value" : 20
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "OSPF export connected routes",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                "protocol" : "connected"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                  "metricType" : "E2"
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "aaa" : {
            "authentication" : { },
            "newModel" : true
          },
          "hostname" : "as2border1",
          "lines" : {
            "aux0" : {
              "@id" : 134,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 135,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 136,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 137,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 138,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 139,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 140,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as2border2" : {
      "@id" : 141,
      "name" : "as2border2",
      "aggregateRoutes" : [
        {
          "class" : "org.batfish.datamodel.GeneratedRoute",
          "network" : "2.128.0.0/16",
          "administrativeCost" : 200,
          "discard" : true,
          "generationPolicy" : "~AGGREGATE_ROUTE_GEN:2.128.0.0/16~"
        }
      ],
      "bgpProcess" : {
        "neighbors" : {
          "2.1.2.2/32" : {
            "@id" : 142,
            "name" : "2.1.2.2/32",
            "address" : "2.1.2.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620226,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.2.2~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.1.2",
            "owner" : 141,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.2.2/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "10.23.21.3/32" : {
            "@id" : 143,
            "name" : "10.23.21.3/32",
            "address" : "10.23.21.3",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620226,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:10.23.21.3~",
            "group" : "as3",
            "importPolicy" : "as3_to_as2",
            "localAs" : 2,
            "localIp" : "10.23.21.2",
            "owner" : 141,
            "remoteAs" : 3,
            "remotePrefix" : "10.23.21.3/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "2.1.2.1/32" : {
            "@id" : 144,
            "name" : "2.1.2.1/32",
            "address" : "2.1.2.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620226,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.2.1~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.1.2",
            "owner" : 141,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.2.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          }
        },
        "routerId" : "2.1.1.2"
      },
      "communityLists" : {
        "as1_community" : {
          "@id" : 145,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          ],
          "name" : "as1_community",
          "invertMatch" : false
        },
        "as2_community" : {
          "@id" : 146,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          ],
          "name" : "as2_community",
          "invertMatch" : false
        },
        "as3_community" : {
          "@id" : 147,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          ],
          "name" : "as3_community",
          "invertMatch" : false
        }
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 148,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "10.23.21.2/24"
          ],
          "bandwidth" : 1.0E8,
          "incomingFilter" : 149,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "outgoingFilter" : 150,
          "owner" : 141,
          "prefix" : "10.23.21.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 151,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.12.21.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 152,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 141,
          "prefix" : "2.12.21.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/0" : {
          "@id" : 153,
          "name" : "FastEthernet1/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.12.22.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 152,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 141,
          "prefix" : "2.12.22.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 154,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.1.1.2/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 152,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 141,
          "prefix" : "2.1.1.2/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "101" : {
          "@id" : 155,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.2.0"
              ]
            }
          ]
        },
        "103" : {
          "@id" : 156,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.2.0"
              ]
            }
          ]
        },
        "INSIDE_TO_OUTSIDE" : {
          "@id" : 150,
          "name" : "INSIDE_TO_OUTSIDE",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "3.0.0.0/8"
              ],
              "name" : "permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255",
              "negate" : false,
              "srcIps" : [
                "2.0.0.0/8"
              ]
            },
            {
              "action" : "REJECT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "deny ip any any",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            }
          ]
        },
        "OUTSIDE_TO_INSIDE" : {
          "@id" : 149,
          "name" : "OUTSIDE_TO_INSIDE",
          "lines" : [
            {
              "action" : "REJECT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "deny ip 2.0.0.0 0.255.255.255 any",
              "negate" : false,
              "srcIps" : [
                "2.0.0.0/8"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "permit ip any any",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            }
          ]
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 152,
            "name" : 1,
            "interfaces" : [
              151,
              153,
              154
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "2.1.1.2"
      },
      "routeFilterLists" : {
        "101" : {
          "@id" : 157,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            }
          ]
        },
        "103" : {
          "@id" : 158,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        },
        "inbound_route_filter" : {
          "@id" : 159,
          "name" : "inbound_route_filter",
          "lines" : [
            {
              "action" : "REJECT",
              "lengthRange" : "8-32",
              "prefix" : "2.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "0-32",
              "prefix" : "0.0.0.0/0"
            }
          ]
        },
        "outbound_routes" : {
          "@id" : 160,
          "name" : "outbound_routes",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "16-32",
              "prefix" : "2.128.0.0/9"
            }
          ]
        },
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 161,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "16-16",
              "prefix" : "2.128.0.0/16"
            }
          ]
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 162,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
        },
        "~MATCH_SUPPRESSED_SUMMARY_ONLY~" : {
          "@id" : 163,
          "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "17-32",
              "prefix" : "2.128.0.0/16"
            }
          ]
        }
      },
      "routingPolicies" : {
        "as1_to_as2" : {
          "@id" : 164,
          "name" : "as1_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as1_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as2_to_as1" : {
          "@id" : 165,
          "name" : "as2_to_as1",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "outbound_routes"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "103"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as2_to_as3" : {
          "@id" : 166,
          "name" : "as2_to_as3",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "101"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "outbound_routes"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as3_to_as2" : {
          "@id" : 167,
          "name" : "as3_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as3_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "~AGGREGATE_ROUTE_GEN:2.128.0.0/16~" : {
          "@id" : 168,
          "name" : "~AGGREGATE_ROUTE_GEN:2.128.0.0/16~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                  "prefixSpace" : [
                    "2.128.0.0/16:17-32"
                  ]
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            }
          ]
        },
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 169,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "Suppress summarized of summary-only aggregate-address networks",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY~"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnFalse"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:10.23.21.3~" : {
          "@id" : 170,
          "name" : "~BGP_PEER_EXPORT_POLICY:10.23.21.3~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "as2_to_as3"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.2.1~" : {
          "@id" : 171,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.2.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.2.2~" : {
          "@id" : 172,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.2.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 173,
          "name" : "~OSPF_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
              "metric" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                "value" : 20
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "OSPF export connected routes",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                "protocol" : "connected"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                  "metricType" : "E2"
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as2border2",
          "lines" : {
            "aux0" : {
              "@id" : 174,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 175,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 176,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 177,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 178,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 179,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 180,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as2core1" : {
      "@id" : 181,
      "name" : "as2core1",
      "bgpProcess" : {
        "neighbors" : {
          "2.1.1.2/32" : {
            "@id" : 182,
            "name" : "2.1.1.2/32",
            "address" : "2.1.1.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620481,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.1.2~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.2.1",
            "owner" : 181,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.1.2/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          },
          "2.1.3.2/32" : {
            "@id" : 183,
            "name" : "2.1.3.2/32",
            "address" : "2.1.3.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620481,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.3.2~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.2.1",
            "owner" : 181,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.3.2/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          },
          "2.1.1.1/32" : {
            "@id" : 184,
            "name" : "2.1.1.1/32",
            "address" : "2.1.1.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620481,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.1.1~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.2.1",
            "owner" : 181,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.1.1/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          },
          "2.1.3.1/32" : {
            "@id" : 185,
            "name" : "2.1.3.1/32",
            "address" : "2.1.3.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620481,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.3.1~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.2.1",
            "owner" : 181,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.3.1/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          }
        },
        "routerId" : "2.1.2.1"
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 186,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.12.11.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 187,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 181,
          "prefix" : "2.12.11.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 188,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.12.21.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 187,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 181,
          "prefix" : "2.12.21.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/0" : {
          "@id" : 189,
          "name" : "FastEthernet1/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.23.12.2/24"
          ],
          "bandwidth" : 1.0E8,
          "incomingFilter" : 190,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 187,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 181,
          "prefix" : "2.23.12.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet2/0" : {
          "@id" : 191,
          "name" : "FastEthernet2/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.23.11.2/24"
          ],
          "bandwidth" : 1.0E8,
          "incomingFilter" : 190,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 187,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 181,
          "prefix" : "2.23.11.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 192,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.1.2.1/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 187,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 181,
          "prefix" : "2.1.2.1/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "blocktelnet" : {
          "@id" : 190,
          "name" : "blocktelnet",
          "lines" : [
            {
              "action" : "REJECT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "dstPorts" : [
                "23-23"
              ],
              "ipProtocols" : [
                "TCP"
              ],
              "name" : "deny   tcp any any eq telnet",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "permit ip any any",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            }
          ]
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 187,
            "name" : 1,
            "interfaces" : [
              186,
              188,
              189,
              191,
              192
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "2.1.2.1"
      },
      "routeFilterLists" : {
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 193,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 194,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
        }
      },
      "routingPolicies" : {
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 195,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.1.1~" : {
          "@id" : 196,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.1.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.1.2~" : {
          "@id" : 197,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.1.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.3.1~" : {
          "@id" : 198,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.3.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.3.2~" : {
          "@id" : 199,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.3.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 200,
          "name" : "~OSPF_EXPORT_POLICY~"
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as2core1",
          "lines" : {
            "aux0" : {
              "@id" : 201,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 202,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 203,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 204,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 205,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 206,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 207,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as2core2" : {
      "@id" : 208,
      "name" : "as2core2",
      "bgpProcess" : {
        "neighbors" : {
          "2.1.1.2/32" : {
            "@id" : 209,
            "name" : "2.1.1.2/32",
            "address" : "2.1.1.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620482,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.1.2~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.2.2",
            "owner" : 208,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.1.2/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          },
          "2.1.3.2/32" : {
            "@id" : 210,
            "name" : "2.1.3.2/32",
            "address" : "2.1.3.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620482,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.3.2~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.2.2",
            "owner" : 208,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.3.2/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          },
          "2.1.1.1/32" : {
            "@id" : 211,
            "name" : "2.1.1.1/32",
            "address" : "2.1.1.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620482,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.1.1~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.2.2",
            "owner" : 208,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.1.1/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          },
          "2.1.3.1/32" : {
            "@id" : 212,
            "name" : "2.1.3.1/32",
            "address" : "2.1.3.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620482,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.3.1~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.2.2",
            "owner" : 208,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.3.1/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          }
        },
        "routerId" : "2.1.2.2"
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 213,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.12.22.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1300,
          "nativeVlan" : 1,
          "ospfArea" : 214,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 208,
          "prefix" : "2.12.22.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 215,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.12.12.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1100,
          "nativeVlan" : 1,
          "ospfArea" : 214,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 208,
          "prefix" : "2.12.12.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/0" : {
          "@id" : 216,
          "name" : "FastEthernet1/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.23.21.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 214,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 208,
          "prefix" : "2.23.21.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet2/0" : {
          "@id" : 217,
          "name" : "FastEthernet2/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.23.22.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1200,
          "nativeVlan" : 1,
          "ospfArea" : 214,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 208,
          "prefix" : "2.23.22.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 218,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.1.2.2/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 214,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 208,
          "prefix" : "2.1.2.2/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 214,
            "name" : 1,
            "interfaces" : [
              213,
              215,
              216,
              217,
              218
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "2.1.2.2"
      },
      "routeFilterLists" : {
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 219,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 220,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
        }
      },
      "routingPolicies" : {
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 221,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.1.1~" : {
          "@id" : 222,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.1.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.1.2~" : {
          "@id" : 223,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.1.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.3.1~" : {
          "@id" : 224,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.3.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.3.2~" : {
          "@id" : 225,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.3.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 226,
          "name" : "~OSPF_EXPORT_POLICY~"
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as2core2",
          "lines" : {
            "aux0" : {
              "@id" : 227,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 228,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 229,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 230,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 231,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 232,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 233,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as2dept1" : {
      "@id" : 234,
      "name" : "as2dept1",
      "bgpProcess" : {
        "neighbors" : {
          "2.34.101.3/32" : {
            "@id" : 235,
            "name" : "2.34.101.3/32",
            "address" : "2.34.101.3",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620993,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.34.101.3~",
            "group" : "as2",
            "importPolicy" : "as2_to_dept",
            "localAs" : 65001,
            "localIp" : "2.34.101.4",
            "owner" : 234,
            "remoteAs" : 2,
            "remotePrefix" : "2.34.101.3/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "2.34.201.3/32" : {
            "@id" : 236,
            "name" : "2.34.201.3/32",
            "address" : "2.34.201.3",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620993,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.34.201.3~",
            "group" : "as2",
            "importPolicy" : "as2_to_dept",
            "localAs" : 65001,
            "localIp" : "2.34.201.4",
            "owner" : 234,
            "remoteAs" : 2,
            "remotePrefix" : "2.34.201.3/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          }
        },
        "routerId" : "2.1.4.1"
      },
      "communityLists" : {
        "as2_community" : {
          "@id" : 237,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          ],
          "name" : "as2_community",
          "invertMatch" : false
        }
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 238,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.34.101.4/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 234,
          "prefix" : "2.34.101.4/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 239,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.34.201.4/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 234,
          "prefix" : "2.34.201.4/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/0" : {
          "@id" : 240,
          "name" : "FastEthernet1/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.128.0.1/24"
          ],
          "bandwidth" : 1.0E8,
          "incomingFilter" : 241,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 234,
          "prefix" : "2.128.0.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/1" : {
          "@id" : 242,
          "name" : "FastEthernet1/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.128.1.1/24"
          ],
          "bandwidth" : 1.0E8,
          "incomingFilter" : 241,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 234,
          "prefix" : "2.128.1.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 243,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.1.1.2/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 234,
          "prefix" : "2.1.1.2/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "102" : {
          "@id" : 244,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 2.128.0.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "2.128.0.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 2.128.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "2.128.1.0"
              ]
            }
          ]
        },
        "105" : {
          "@id" : 245,
          "name" : "105",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.2.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.2.0"
              ]
            }
          ]
        },
        "RESTRICT_HOST_TRAFFIC_IN" : {
          "@id" : 241,
          "name" : "RESTRICT_HOST_TRAFFIC_IN",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "permit ip 2.128.0.0 0.0.255.255 any",
              "negate" : false,
              "srcIps" : [
                "2.128.0.0/16"
              ]
            },
            {
              "action" : "REJECT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "deny ip any any",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "ipProtocols" : [
                "ICMP"
              ],
              "name" : "permit icmp any any",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            }
          ]
        },
        "RESTRICT_HOST_TRAFFIC_OUT" : {
          "@id" : 246,
          "name" : "RESTRICT_HOST_TRAFFIC_OUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "2.128.0.0/16"
              ],
              "name" : "permit ip any 2.128.0.0 0.0.255.255",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            },
            {
              "action" : "REJECT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "name" : "deny ip any any",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "0.0.0.0/0"
              ],
              "ipProtocols" : [
                "ICMP"
              ],
              "name" : "permit icmp any any",
              "negate" : false,
              "srcIps" : [
                "0.0.0.0/0"
              ]
            }
          ]
        }
      },
      "routeFilterLists" : {
        "102" : {
          "@id" : 247,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "2.128.0.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "2.128.1.0/24"
            }
          ]
        },
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 248,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 249,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "2.128.0.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "2.128.1.0/24"
            }
          ]
        }
      },
      "routingPolicies" : {
        "as2_to_dept" : {
          "@id" : 250,
          "name" : "as2_to_dept",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as2_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "dept_to_as2" : {
          "@id" : 251,
          "name" : "dept_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "102"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 65001
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 252,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.34.101.3~" : {
          "@id" : 253,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.34.101.3~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "dept_to_as2"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.34.201.3~" : {
          "@id" : 254,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.34.201.3~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "dept_to_as2"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as2dept1",
          "lines" : {
            "aux0" : {
              "@id" : 255,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 256,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 257,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 258,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 259,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 260,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 261,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as2dist1" : {
      "@id" : 262,
      "name" : "as2dist1",
      "bgpProcess" : {
        "neighbors" : {
          "2.1.2.2/32" : {
            "@id" : 263,
            "name" : "2.1.2.2/32",
            "address" : "2.1.2.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620737,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.2.2~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.3.1",
            "owner" : 262,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.2.2/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "2.34.101.4/32" : {
            "@id" : 264,
            "name" : "2.34.101.4/32",
            "address" : "2.34.101.4",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620737,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.34.101.4~",
            "group" : "dept",
            "importPolicy" : "dept_to_as2",
            "localAs" : 2,
            "localIp" : "2.34.101.3",
            "owner" : 262,
            "remoteAs" : 65001,
            "remotePrefix" : "2.34.101.4/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "2.1.2.1/32" : {
            "@id" : 265,
            "name" : "2.1.2.1/32",
            "address" : "2.1.2.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620737,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.2.1~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.3.1",
            "owner" : 262,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.2.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          }
        },
        "routerId" : "2.1.3.1"
      },
      "communityLists" : {
        "dept_community" : {
          "@id" : 266,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )65001:"
            }
          ],
          "name" : "dept_community",
          "invertMatch" : false
        }
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 267,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.23.21.3/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 268,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 262,
          "prefix" : "2.23.21.3/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 269,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.23.11.3/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 268,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 262,
          "prefix" : "2.23.11.3/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/0" : {
          "@id" : 270,
          "name" : "FastEthernet1/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.34.101.3/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 262,
          "prefix" : "2.34.101.3/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 271,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.1.3.1/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 268,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 262,
          "prefix" : "2.1.3.1/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "102" : {
          "@id" : 272,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.0.0"
              ],
              "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
              "negate" : false,
              "srcIps" : [
                "2.128.0.0"
              ]
            }
          ]
        },
        "105" : {
          "@id" : 273,
          "name" : "105",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.2.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.2.0"
              ]
            }
          ]
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 268,
            "name" : 1,
            "interfaces" : [
              267,
              269,
              271
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "2.1.3.1"
      },
      "routeFilterLists" : {
        "105" : {
          "@id" : 274,
          "name" : "105",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        },
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 275,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 276,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
        }
      },
      "routingPolicies" : {
        "as2_to_dept" : {
          "@id" : 277,
          "name" : "as2_to_dept",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "105"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 65001
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "dept_to_as2" : {
          "@id" : 278,
          "name" : "dept_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "dept_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 279,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.2.1~" : {
          "@id" : 280,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.2.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.2.2~" : {
          "@id" : 281,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.2.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.34.101.4~" : {
          "@id" : 282,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.34.101.4~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "as2_to_dept"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 283,
          "name" : "~OSPF_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
              "metric" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                "value" : 20
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "OSPF export connected routes",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                "protocol" : "connected"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                  "metricType" : "E2"
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as2dist1",
          "lines" : {
            "aux0" : {
              "@id" : 284,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 285,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 286,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 287,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 288,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 289,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 290,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as2dist2" : {
      "@id" : 291,
      "name" : "as2dist2",
      "bgpProcess" : {
        "neighbors" : {
          "2.1.2.2/32" : {
            "@id" : 292,
            "name" : "2.1.2.2/32",
            "address" : "2.1.2.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620738,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.2.2~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.3.2",
            "owner" : 291,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.2.2/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "2.34.201.4/32" : {
            "@id" : 293,
            "name" : "2.34.201.4/32",
            "address" : "2.34.201.4",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620738,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.34.201.4~",
            "group" : "dept",
            "importPolicy" : "dept_to_as2",
            "localAs" : 2,
            "localIp" : "2.34.201.3",
            "owner" : 291,
            "remoteAs" : 65001,
            "remotePrefix" : "2.34.201.4/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "2.1.2.1/32" : {
            "@id" : 294,
            "name" : "2.1.2.1/32",
            "address" : "2.1.2.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 33620738,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:2.1.2.1~",
            "group" : "as2",
            "localAs" : 2,
            "localIp" : "2.1.3.2",
            "owner" : 291,
            "remoteAs" : 2,
            "remotePrefix" : "2.1.2.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          }
        },
        "routerId" : "2.1.3.2"
      },
      "communityLists" : {
        "dept_community" : {
          "@id" : 295,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )65001:"
            }
          ],
          "name" : "dept_community",
          "invertMatch" : false
        }
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 296,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.23.22.3/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 297,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 291,
          "prefix" : "2.23.22.3/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 298,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.23.12.3/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 297,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 291,
          "prefix" : "2.23.12.3/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/0" : {
          "@id" : 299,
          "name" : "FastEthernet1/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.34.201.3/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 291,
          "prefix" : "2.34.201.3/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 300,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.1.3.2/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 297,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 291,
          "prefix" : "2.1.3.2/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "102" : {
          "@id" : 301,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.0.0"
              ],
              "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
              "negate" : false,
              "srcIps" : [
                "2.128.0.0"
              ]
            }
          ]
        },
        "105" : {
          "@id" : 302,
          "name" : "105",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.2.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.2.0"
              ]
            }
          ]
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 297,
            "name" : 1,
            "interfaces" : [
              296,
              298,
              300
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "2.1.3.2"
      },
      "routeFilterLists" : {
        "105" : {
          "@id" : 303,
          "name" : "105",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        },
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 304,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 305,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
        }
      },
      "routingPolicies" : {
        "as2_to_dept" : {
          "@id" : 306,
          "name" : "as2_to_dept",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "105"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 65001
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "dept_to_as2" : {
          "@id" : 307,
          "name" : "dept_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "dept_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 308,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.2.1~" : {
          "@id" : 309,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.2.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.1.2.2~" : {
          "@id" : 310,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.1.2.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:2.34.201.4~" : {
          "@id" : 311,
          "name" : "~BGP_PEER_EXPORT_POLICY:2.34.201.4~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "as2_to_dept"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 312,
          "name" : "~OSPF_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
              "metric" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                "value" : 20
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "OSPF export connected routes",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                "protocol" : "connected"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                  "metricType" : "E2"
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as2dist2",
          "lines" : {
            "aux0" : {
              "@id" : 313,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 314,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 315,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 316,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 317,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 318,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 319,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as3border1" : {
      "@id" : 320,
      "name" : "as3border1",
      "bgpProcess" : {
        "neighbors" : {
          "10.23.21.2/32" : {
            "@id" : 321,
            "name" : "10.23.21.2/32",
            "address" : "10.23.21.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 50397441,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:10.23.21.2~",
            "group" : "as2",
            "importPolicy" : "as2_to_as3",
            "localAs" : 3,
            "localIp" : "10.23.21.3",
            "owner" : 320,
            "remoteAs" : 2,
            "remotePrefix" : "10.23.21.2/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "3.10.1.1/32" : {
            "@id" : 322,
            "name" : "3.10.1.1/32",
            "address" : "3.10.1.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 50397441,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:3.10.1.1~",
            "group" : "as3",
            "localAs" : 3,
            "localIp" : "3.1.1.1",
            "owner" : 320,
            "remoteAs" : 3,
            "remotePrefix" : "3.10.1.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          }
        },
        "routerId" : "3.1.1.1"
      },
      "communityLists" : {
        "as1_community" : {
          "@id" : 323,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          ],
          "name" : "as1_community",
          "invertMatch" : false
        },
        "as2_community" : {
          "@id" : 324,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          ],
          "name" : "as2_community",
          "invertMatch" : false
        },
        "as3_community" : {
          "@id" : 325,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          ],
          "name" : "as3_community",
          "invertMatch" : false
        }
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 326,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "10.23.21.3/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 320,
          "prefix" : "10.23.21.3/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 327,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "3.0.1.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 328,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 320,
          "prefix" : "3.0.1.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 329,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "3.1.1.1/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 328,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 320,
          "prefix" : "3.1.1.1/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "101" : {
          "@id" : 330,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.2.0"
              ]
            }
          ]
        },
        "102" : {
          "@id" : 331,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.0.0.0"
              ],
              "name" : "permit ip host 2.0.0.0 host 255.0.0.0",
              "negate" : false,
              "srcIps" : [
                "2.0.0.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.0.0"
              ],
              "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
              "negate" : false,
              "srcIps" : [
                "2.128.0.0"
              ]
            }
          ]
        },
        "103" : {
          "@id" : 332,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.2.0"
              ]
            }
          ]
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 328,
            "name" : 1,
            "interfaces" : [
              327,
              329
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "3.1.1.1"
      },
      "routeFilterLists" : {
        "101" : {
          "@id" : 333,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            }
          ]
        },
        "102" : {
          "@id" : 334,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "8-8",
              "prefix" : "2.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "16-16",
              "prefix" : "2.128.0.0/16"
            }
          ]
        },
        "103" : {
          "@id" : 335,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        },
        "default_list" : {
          "@id" : 336,
          "name" : "default_list",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "0-0",
              "prefix" : "0.0.0.0/0"
            }
          ]
        },
        "inbound_route_filter" : {
          "@id" : 337,
          "name" : "inbound_route_filter",
          "lines" : [
            {
              "action" : "REJECT",
              "lengthRange" : "8-32",
              "prefix" : "3.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "0-32",
              "prefix" : "0.0.0.0/0"
            }
          ]
        },
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 338,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 339,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        }
      },
      "routingPolicies" : {
        "as1_to_as3" : {
          "@id" : 340,
          "name" : "as1_to_as3",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as1_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as2_to_as3" : {
          "@id" : 341,
          "name" : "as2_to_as3",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as2_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as3_to_as1" : {
          "@id" : 342,
          "name" : "as3_to_as1",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "102"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "103"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as3_to_as2" : {
          "@id" : 343,
          "name" : "as3_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "101"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "103"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "default_list"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 344,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:10.23.21.2~" : {
          "@id" : 345,
          "name" : "~BGP_PEER_EXPORT_POLICY:10.23.21.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "as3_to_as2"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:3.10.1.1~" : {
          "@id" : 346,
          "name" : "~BGP_PEER_EXPORT_POLICY:3.10.1.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 347,
          "name" : "~OSPF_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
              "metric" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                "value" : 20
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "OSPF export connected routes",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                "protocol" : "connected"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                  "metricType" : "E2"
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as3border1",
          "lines" : {
            "aux0" : {
              "@id" : 348,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 349,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 350,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 351,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 352,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 353,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 354,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as3border2" : {
      "@id" : 355,
      "name" : "as3border2",
      "bgpProcess" : {
        "neighbors" : {
          "10.13.22.1/32" : {
            "@id" : 356,
            "name" : "10.13.22.1/32",
            "address" : "10.13.22.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 50463234,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:10.13.22.1~",
            "group" : "as1",
            "importPolicy" : "as1_to_as3",
            "localAs" : 3,
            "localIp" : "10.13.22.3",
            "owner" : 355,
            "remoteAs" : 1,
            "remotePrefix" : "10.13.22.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          },
          "3.10.1.1/32" : {
            "@id" : 357,
            "name" : "3.10.1.1/32",
            "address" : "3.10.1.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 50463234,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:3.10.1.1~",
            "group" : "as3",
            "localAs" : 3,
            "localIp" : "3.2.2.2",
            "owner" : 355,
            "remoteAs" : 3,
            "remotePrefix" : "3.10.1.1/32",
            "routeReflectorClient" : false,
            "sendCommunity" : true
          }
        },
        "routerId" : "3.2.2.2"
      },
      "communityLists" : {
        "as1_community" : {
          "@id" : 358,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          ],
          "name" : "as1_community",
          "invertMatch" : false
        },
        "as2_community" : {
          "@id" : 359,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          ],
          "name" : "as2_community",
          "invertMatch" : false
        },
        "as3_community" : {
          "@id" : 360,
          "lines" : [
            {
              "action" : "ACCEPT",
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          ],
          "name" : "as3_community",
          "invertMatch" : false
        }
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 361,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "3.0.2.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 362,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 355,
          "prefix" : "3.0.2.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 363,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "10.13.22.3/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 355,
          "prefix" : "10.13.22.3/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 364,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "3.2.2.2/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 362,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 355,
          "prefix" : "3.2.2.2/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "101" : {
          "@id" : 365,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "1.0.2.0"
              ]
            }
          ]
        },
        "102" : {
          "@id" : 366,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.0.0.0"
              ],
              "name" : "permit ip host 2.0.0.0 host 255.0.0.0",
              "negate" : false,
              "srcIps" : [
                "2.0.0.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.0.0"
              ],
              "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
              "negate" : false,
              "srcIps" : [
                "2.128.0.0"
              ]
            }
          ]
        },
        "103" : {
          "@id" : 367,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.1.0"
              ]
            },
            {
              "action" : "ACCEPT",
              "dstIps" : [
                "255.255.255.0"
              ],
              "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
              "negate" : false,
              "srcIps" : [
                "3.0.2.0"
              ]
            }
          ]
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 362,
            "name" : 1,
            "interfaces" : [
              361,
              364
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "3.2.2.2"
      },
      "routeFilterLists" : {
        "101" : {
          "@id" : 368,
          "name" : "101",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "1.0.2.0/24"
            }
          ]
        },
        "102" : {
          "@id" : 369,
          "name" : "102",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "8-8",
              "prefix" : "2.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "16-16",
              "prefix" : "2.128.0.0/16"
            }
          ]
        },
        "103" : {
          "@id" : 370,
          "name" : "103",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        },
        "inbound_route_filter" : {
          "@id" : 371,
          "name" : "inbound_route_filter",
          "lines" : [
            {
              "action" : "REJECT",
              "lengthRange" : "8-32",
              "prefix" : "3.0.0.0/8"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "0-32",
              "prefix" : "0.0.0.0/0"
            }
          ]
        },
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 372,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 373,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        }
      },
      "routingPolicies" : {
        "as1_to_as3" : {
          "@id" : 374,
          "name" : "as1_to_as3",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as1_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as2_to_as3" : {
          "@id" : 375,
          "name" : "as2_to_as3",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                  "name" : "as2_community"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                  "localPreference" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 350
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as3_to_as1" : {
          "@id" : 376,
          "name" : "as3_to_as1",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "102"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "103"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 1
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "as3_to_as2" : {
          "@id" : 377,
          "name" : "as3_to_as2",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "101"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                "prefix" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                },
                "prefixSet" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                  "name" : "103"
                }
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                  "metric" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                    "value" : 50
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                    "communities" : [
                      {
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 3
                        },
                        "suffix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                          "value" : 2
                        }
                      }
                    ]
                  }
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ExitReject"
            }
          ]
        },
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 378,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:10.13.22.1~" : {
          "@id" : 379,
          "name" : "~BGP_PEER_EXPORT_POLICY:10.13.22.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                "conjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                    "calledPolicyName" : "as3_to_as1"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:3.10.1.1~" : {
          "@id" : 380,
          "name" : "~BGP_PEER_EXPORT_POLICY:3.10.1.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 381,
          "name" : "~OSPF_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
              "metric" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                "value" : 20
              }
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "OSPF export connected routes",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                "protocol" : "connected"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                  "metricType" : "E2"
                },
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as3border2",
          "lines" : {
            "aux0" : {
              "@id" : 382,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 383,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 384,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 385,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 386,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 387,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 388,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "as3core1" : {
      "@id" : 389,
      "name" : "as3core1",
      "bgpProcess" : {
        "neighbors" : {
          "3.2.2.2/32" : {
            "@id" : 390,
            "name" : "3.2.2.2/32",
            "address" : "3.2.2.2",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 50987265,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:3.2.2.2~",
            "group" : "as3",
            "localAs" : 3,
            "localIp" : "3.10.1.1",
            "owner" : 389,
            "remoteAs" : 3,
            "remotePrefix" : "3.2.2.2/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          },
          "3.1.1.1/32" : {
            "@id" : 391,
            "name" : "3.1.1.1/32",
            "address" : "3.1.1.1",
            "advertiseExternal" : false,
            "advertiseInactive" : false,
            "allowLocalAsIn" : false,
            "allowRemoteAsOut" : false,
            "clusterId" : 50987265,
            "defaultMetric" : 0,
            "dynamic" : false,
            "ebgpMultihop" : false,
            "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:3.1.1.1~",
            "group" : "as3",
            "localAs" : 3,
            "localIp" : "3.10.1.1",
            "owner" : 389,
            "remoteAs" : 3,
            "remotePrefix" : "3.1.1.1/32",
            "routeReflectorClient" : true,
            "sendCommunity" : true
          }
        },
        "routerId" : "3.10.1.1"
      },
      "configurationFormat" : "CISCO_IOS",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "FastEthernet0/0" : {
          "@id" : 392,
          "name" : "FastEthernet0/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "3.0.2.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 393,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 389,
          "prefix" : "3.0.2.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet0/1" : {
          "@id" : 394,
          "name" : "FastEthernet0/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "3.0.1.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 393,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 389,
          "prefix" : "3.0.1.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/0" : {
          "@id" : 395,
          "name" : "FastEthernet1/0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "90.90.90.1/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 389,
          "prefix" : "90.90.90.1/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "FastEthernet1/1" : {
          "@id" : 396,
          "name" : "FastEthernet1/1",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "90.90.90.2/24"
          ],
          "bandwidth" : 1.0E8,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 389,
          "prefix" : "90.90.90.2/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        },
        "Loopback0" : {
          "@id" : 397,
          "name" : "Loopback0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "3.10.1.1/32"
          ],
          "bandwidth" : 1.0E12,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfArea" : 393,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : true,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "owner" : 389,
          "prefix" : "3.10.1.1/32",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ospfProcess" : {
        "areas" : {
          "1" : {
            "@id" : 393,
            "name" : 1,
            "interfaces" : [
              392,
              394,
              397
            ]
          }
        },
        "exportPolicy" : "~OSPF_EXPORT_POLICY~",
        "referenceBandwidth" : 1.0E9,
        "routerId" : "3.10.1.1"
      },
      "routeFilterLists" : {
        "~BGP_AGGREGATE_NETWORKS_FILTER:~" : {
          "@id" : 398,
          "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
        },
        "~BGP_NETWORK_NETWORKS_FILTER~" : {
          "@id" : 399,
          "name" : "~BGP_NETWORK_NETWORKS_FILTER~",
          "lines" : [
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.1.0/24"
            },
            {
              "action" : "ACCEPT",
              "lengthRange" : "24-24",
              "prefix" : "3.0.2.0/24"
            }
          ]
        }
      },
      "routingPolicies" : {
        "~BGP_COMMON_EXPORT_POLICY~" : {
          "@id" : 400,
          "name" : "~BGP_COMMON_EXPORT_POLICY~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                "disjuncts" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_NETWORK_NETWORKS_FILTER~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                    "prefix" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                    },
                    "prefixSet" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                      "name" : "~BGP_AGGREGATE_NETWORKS_FILTER:~"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "bgp"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                    "protocol" : "ibgp"
                  }
                ]
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ReturnTrue"
                }
              ]
            },
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
              "type" : "ReturnFalse"
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:3.1.1.1~" : {
          "@id" : 401,
          "name" : "~BGP_PEER_EXPORT_POLICY:3.1.1.1~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~BGP_PEER_EXPORT_POLICY:3.2.2.2~" : {
          "@id" : 402,
          "name" : "~BGP_PEER_EXPORT_POLICY:3.2.2.2~",
          "statements" : [
            {
              "class" : "org.batfish.datamodel.routing_policy.statement.If",
              "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
              "falseStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitReject"
                }
              ],
              "guard" : {
                "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY~"
              },
              "trueStatements" : [
                {
                  "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                  "type" : "ExitAccept"
                }
              ]
            }
          ]
        },
        "~OSPF_EXPORT_POLICY~" : {
          "@id" : 403,
          "name" : "~OSPF_EXPORT_POLICY~"
        }
      },
      "vendorFamily" : {
        "cisco" : {
          "hostname" : "as3core1",
          "lines" : {
            "aux0" : {
              "@id" : 404,
              "name" : "aux0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "con0" : {
              "@id" : 405,
              "name" : "con0",
              "execTimeoutMinutes" : 0,
              "execTimeoutSeconds" : 0
            },
            "vty0" : {
              "@id" : 406,
              "name" : "vty0"
            },
            "vty1" : {
              "@id" : 407,
              "name" : "vty1"
            },
            "vty2" : {
              "@id" : 408,
              "name" : "vty2"
            },
            "vty3" : {
              "@id" : 409,
              "name" : "vty3"
            },
            "vty4" : {
              "@id" : 410,
              "name" : "vty4"
            }
          },
          "logging" : { },
          "services" : {
            "log" : {
              "enabled" : true,
              "subservices" : {
                "datetime" : {
                  "enabled" : true,
                  "subservices" : {
                    "msec" : {
                      "enabled" : true
                    }
                  }
                }
              }
            },
            "password-encryption" : {
              "enabled" : false
            },
            "timestamps" : {
              "enabled" : true,
              "subservices" : {
                "debug" : {
                  "enabled" : true,
                  "subservices" : {
                    "datetime" : {
                      "enabled" : true,
                      "subservices" : {
                        "msec" : {
                          "enabled" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "host1" : {
      "@id" : 411,
      "name" : "host1",
      "configurationFormat" : "HOST",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "eth0" : {
          "@id" : 412,
          "name" : "eth0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.128.0.101/24"
          ],
          "bandwidth" : 1.0E9,
          "incomingFilter" : 413,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "outgoingFilter" : 414,
          "owner" : 411,
          "prefix" : "2.128.0.101/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "filter::FORWARD" : {
          "@id" : 415,
          "name" : "filter::FORWARD",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "filter::INPUT" : {
          "@id" : 413,
          "name" : "filter::INPUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstPorts" : [
                "53-53"
              ],
              "ipProtocols" : [
                "UDP"
              ],
              "negate" : false
            },
            {
              "action" : "ACCEPT",
              "dstPorts" : [
                "22-22"
              ],
              "ipProtocols" : [
                "TCP"
              ],
              "negate" : false
            },
            {
              "action" : "REJECT",
              "negate" : false
            }
          ]
        },
        "filter::OUTPUT" : {
          "@id" : 414,
          "name" : "filter::OUTPUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::FORWARD" : {
          "@id" : 416,
          "name" : "mangle::FORWARD",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::INPUT" : {
          "@id" : 417,
          "name" : "mangle::INPUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::OUTPUT" : {
          "@id" : 418,
          "name" : "mangle::OUTPUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::POSTROUTING" : {
          "@id" : 419,
          "name" : "mangle::POSTROUTING",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::PREROUTING" : {
          "@id" : 420,
          "name" : "mangle::PREROUTING",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "nat::OUTPUT" : {
          "@id" : 421,
          "name" : "nat::OUTPUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "nat::POSTROUTING" : {
          "@id" : 422,
          "name" : "nat::POSTROUTING",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "nat::PREROUTING" : {
          "@id" : 423,
          "name" : "nat::PREROUTING",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        }
      },
      "staticRoutes" : [
        {
          "class" : "org.batfish.datamodel.StaticRoute",
          "network" : "0.0.0.0/0",
          "nextHopInterface" : "eth0",
          "tag" : -1,
          "administrativeCost" : 1
        }
      ],
      "vendorFamily" : { }
    },
    "host2" : {
      "@id" : 424,
      "name" : "host2",
      "configurationFormat" : "HOST",
      "defaultCrossZoneAction" : "ACCEPT",
      "defaultInboundAction" : "ACCEPT",
      "interfaces" : {
        "eth0" : {
          "@id" : 425,
          "name" : "eth0",
          "accessVlan" : 0,
          "active" : true,
          "allPrefixes" : [
            "2.128.1.101/24"
          ],
          "bandwidth" : 1.0E9,
          "incomingFilter" : 426,
          "isisL1InterfaceMode" : "unset",
          "isisL2InterfaceMode" : "unset",
          "mtu" : 1500,
          "nativeVlan" : 1,
          "ospfDeadInterval" : 0,
          "ospfEnabled" : false,
          "ospfHelloMultiplier" : 0,
          "ospfPassive" : false,
          "outgoingFilter" : 427,
          "owner" : 424,
          "prefix" : "2.128.1.101/24",
          "switchportMode" : "NONE",
          "switchportTrunkEncapsulation" : "DOT1Q"
        }
      },
      "ipAccessLists" : {
        "filter::FORWARD" : {
          "@id" : 428,
          "name" : "filter::FORWARD",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "filter::INPUT" : {
          "@id" : 426,
          "name" : "filter::INPUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "dstPorts" : [
                "22-22"
              ],
              "ipProtocols" : [
                "TCP"
              ],
              "negate" : false
            },
            {
              "action" : "REJECT",
              "negate" : false
            }
          ]
        },
        "filter::OUTPUT" : {
          "@id" : 427,
          "name" : "filter::OUTPUT",
          "lines" : [
            {
              "action" : "REJECT",
              "dstIps" : [
                "2.128.0.101"
              ],
              "negate" : false
            },
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::FORWARD" : {
          "@id" : 429,
          "name" : "mangle::FORWARD",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::INPUT" : {
          "@id" : 430,
          "name" : "mangle::INPUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::OUTPUT" : {
          "@id" : 431,
          "name" : "mangle::OUTPUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::POSTROUTING" : {
          "@id" : 432,
          "name" : "mangle::POSTROUTING",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "mangle::PREROUTING" : {
          "@id" : 433,
          "name" : "mangle::PREROUTING",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "nat::OUTPUT" : {
          "@id" : 434,
          "name" : "nat::OUTPUT",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "nat::POSTROUTING" : {
          "@id" : 435,
          "name" : "nat::POSTROUTING",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        },
        "nat::PREROUTING" : {
          "@id" : 436,
          "name" : "nat::PREROUTING",
          "lines" : [
            {
              "action" : "ACCEPT",
              "negate" : false
            }
          ]
        }
      },
      "staticRoutes" : [
        {
          "class" : "org.batfish.datamodel.StaticRoute",
          "network" : "0.0.0.0/0",
          "nextHopInterface" : "eth0",
          "tag" : -1,
          "administrativeCost" : 1
        }
      ],
      "vendorFamily" : { }
    }
  }
}
# Some checks can be expressed as JsonPath queries on this JSON.
# For instance, to check whether the MTU of each interface is 1500,
# we look for all interfaces on all nodes with an MTU that is NOT 1500:
Status: SUCCESS
Question: nodespath paths="[{"path":"$.nodes[*].interfaces[*][?(@.mtu != 1500)].mtu","suffix":true,"summary":false}]"
{
  "class" : "org.batfish.question.nodespath.NodesPathQuestionPlugin$NodesPathAnswerElement",
  "results" : {
    "0" : {
      "numResults" : 3,
      "path" : {
        "path" : "$.nodes[*].interfaces[*][?(@.mtu != 1500)].mtu",
        "suffix" : true,
        "summary" : false
      },
      "result" : {
        "$['nodes']['as2core2']['interfaces']['FastEthernet0/0']['mtu']" : 1300,
        "$['nodes']['as2core2']['interfaces']['FastEthernet0/1']['mtu']" : 1100,
        "$['nodes']['as2core2']['interfaces']['FastEthernet2/0']['mtu']" : 1200
      }
    }
  }
}
# We can also do checks on the data model using our more powerful assertion language:
# Check that
# 1. There are 15 nodes
# 2. Every node mentioning aaa new-model has it set to true ('aaa new-model' vs. 'no aaa new-model')
Status: SUCCESS
Question: assert assertions="[{"asPathList":false,"assertion":"(eq 15 (pathsize '$.nodes[*]'))","summary":false}, {"asPathList":false,"assertion":"(eq (pathsize '$.nodes[*].aaaSettings.newModel') (pathsize '$.nodes[*].aaaSettings[?(@.newModel == true)]'))","summary":false}]"
{
  "class" : "org.batfish.question.assertion.AssertQuestionPlugin$AssertAnswerElement",
  "fail" : false,
  "passing" : {
    "0" : {
      "asPathList" : false,
      "assertion" : "(eq 15 (pathsize '$.nodes[*]'))",
      "summary" : false
    },
    "1" : {
      "asPathList" : false,
      "assertion" : "(eq (pathsize '$.nodes[*].aaaSettings.newModel') (pathsize '$.nodes[*].aaaSettings[?(@.newModel == true)]'))",
      "summary" : false
    }
  }
}
#####################
# our logical representation of the network that can be queried in various ways.
# we have many queries and can write more
# for example, we can ask simple questions on adjacencies
Status: SUCCESS
Question: neighbors node1Regex=.* | node2Regex=.* | neighborType=[]
{
  "class" : "org.batfish.question.NeighborsQuestionPlugin$NeighborsAnswerElement",
  "lanNeighbors" : [
    {
      "node1" : "as1border1",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as1core1",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as1border1",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as2border1",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as1border2",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as1core1",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as1border2",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as3border2",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as1core1",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as1border1",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as1core1",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as1border2",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as2border1",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as1border1",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as2border1",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as2core1",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as2border1",
      "node1interface" : "FastEthernet1/0",
      "node2" : "as2core2",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as2border2",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as3border1",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as2border2",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as2core1",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as2border2",
      "node1interface" : "FastEthernet1/0",
      "node2" : "as2core2",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as2core1",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as2border1",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as2core1",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as2border2",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as2core1",
      "node1interface" : "FastEthernet1/0",
      "node2" : "as2dist2",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as2core1",
      "node1interface" : "FastEthernet2/0",
      "node2" : "as2dist1",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as2core2",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as2border2",
      "node2interface" : "FastEthernet1/0"
    },
    {
      "node1" : "as2core2",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as2border1",
      "node2interface" : "FastEthernet1/0"
    },
    {
      "node1" : "as2core2",
      "node1interface" : "FastEthernet1/0",
      "node2" : "as2dist1",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as2core2",
      "node1interface" : "FastEthernet2/0",
      "node2" : "as2dist2",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as2dept1",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as2dist1",
      "node2interface" : "FastEthernet1/0"
    },
    {
      "node1" : "as2dept1",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as2dist2",
      "node2interface" : "FastEthernet1/0"
    },
    {
      "node1" : "as2dept1",
      "node1interface" : "FastEthernet1/0",
      "node2" : "host1",
      "node2interface" : "eth0"
    },
    {
      "node1" : "as2dept1",
      "node1interface" : "FastEthernet1/1",
      "node2" : "host2",
      "node2interface" : "eth0"
    },
    {
      "node1" : "as2dist1",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as2core2",
      "node2interface" : "FastEthernet1/0"
    },
    {
      "node1" : "as2dist1",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as2core1",
      "node2interface" : "FastEthernet2/0"
    },
    {
      "node1" : "as2dist1",
      "node1interface" : "FastEthernet1/0",
      "node2" : "as2dept1",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as2dist2",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as2core2",
      "node2interface" : "FastEthernet2/0"
    },
    {
      "node1" : "as2dist2",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as2core1",
      "node2interface" : "FastEthernet1/0"
    },
    {
      "node1" : "as2dist2",
      "node1interface" : "FastEthernet1/0",
      "node2" : "as2dept1",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as3border1",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as2border2",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as3border1",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as3core1",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as3border2",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as3core1",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as3border2",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as1border2",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as3core1",
      "node1interface" : "FastEthernet0/0",
      "node2" : "as3border2",
      "node2interface" : "FastEthernet0/0"
    },
    {
      "node1" : "as3core1",
      "node1interface" : "FastEthernet0/1",
      "node2" : "as3border1",
      "node2interface" : "FastEthernet0/1"
    },
    {
      "node1" : "as3core1",
      "node1interface" : "FastEthernet1/0",
      "node2" : "as3core1",
      "node2interface" : "FastEthernet1/1"
    },
    {
      "node1" : "as3core1",
      "node1interface" : "FastEthernet1/1",
      "node2" : "as3core1",
      "node2interface" : "FastEthernet1/0"
    },
    {
      "node1" : "host1",
      "node1interface" : "eth0",
      "node2" : "as2dept1",
      "node2interface" : "FastEthernet1/0"
    },
    {
      "node1" : "host2",
      "node1interface" : "eth0",
      "node2" : "as2dept1",
      "node2interface" : "FastEthernet1/1"
    }
  ]
}
# --> can help ensure that adjacencies are as expected (i.e., interfaces are properly configured)
# we can also ask for protocol-level adjacencies
Status: SUCCESS
Question: neighbors node1Regex=.* | node2Regex=.* | neighborType=[EBGP]
{
  "class" : "org.batfish.question.NeighborsQuestionPlugin$NeighborsAnswerElement",
  "ebgpNeighbors" : [
    {
      "ip1" : "10.12.11.1",
      "ip2" : "10.12.11.2",
      "node1" : "as1border1",
      "node2" : "as2border1"
    },
    {
      "ip1" : "10.13.22.1",
      "ip2" : "10.13.22.3",
      "node1" : "as1border2",
      "node2" : "as3border2"
    },
    {
      "ip1" : "10.12.11.2",
      "ip2" : "10.12.11.1",
      "node1" : "as2border1",
      "node2" : "as1border1"
    },
    {
      "ip1" : "10.23.21.2",
      "ip2" : "10.23.21.3",
      "node1" : "as2border2",
      "node2" : "as3border1"
    },
    {
      "ip1" : "2.34.101.4",
      "ip2" : "2.34.101.3",
      "node1" : "as2dept1",
      "node2" : "as2dist1"
    },
    {
      "ip1" : "2.34.201.4",
      "ip2" : "2.34.201.3",
      "node1" : "as2dept1",
      "node2" : "as2dist2"
    },
    {
      "ip1" : "2.34.101.3",
      "ip2" : "2.34.101.4",
      "node1" : "as2dist1",
      "node2" : "as2dept1"
    },
    {
      "ip1" : "2.34.201.3",
      "ip2" : "2.34.201.4",
      "node1" : "as2dist2",
      "node2" : "as2dept1"
    },
    {
      "ip1" : "10.23.21.3",
      "ip2" : "10.23.21.2",
      "node1" : "as3border1",
      "node2" : "as2border2"
    },
    {
      "ip1" : "10.13.22.3",
      "ip2" : "10.13.22.1",
      "node1" : "as3border2",
      "node2" : "as1border2"
    }
  ]
}
# --> can help ensure that protocol sessions are configured correctly
##############
# we can also do other simple checks based on best practices of our network
# this will check if all interface ips are unique
Status: SUCCESS
Question: uniqueipassignments nodeRegex=".*" | verbose=false
{
  "class" : "org.batfish.question.UniqueIpAssignmentsQuestionPlugin$UniqueIpAssignmentsAnswerElement",
  "allIps" : {
    "2.1.1.2" : [
      {
        "hostname" : "as2border2",
        "interface" : "Loopback0"
      },
      {
        "hostname" : "as2dept1",
        "interface" : "Loopback0"
      }
    ]
  },
  "enabledIps" : {
    "2.1.1.2" : [
      {
        "hostname" : "as2border2",
        "interface" : "Loopback0"
      },
      {
        "hostname" : "as2dept1",
        "interface" : "Loopback0"
      }
    ]
  }
}
# this will check if all loopbacks are being correctly announced within OSPF
Status: SUCCESS
Question: ospfLoopbacks nodeRegex=".*"
{
  "class" : "org.batfish.question.OspfLoopbacksQuestionPlugin$OspfLoopbacksAnswerElement",
  "active" : {
    "as1border1" : [
      "Loopback0"
    ],
    "as1border2" : [
      "Loopback0"
    ],
    "as1core1" : [
      "Loopback0"
    ],
    "as2border1" : [
      "Loopback0"
    ],
    "as2border2" : [
      "Loopback0"
    ],
    "as2core1" : [
      "Loopback0"
    ],
    "as2core2" : [
      "Loopback0"
    ],
    "as2dist1" : [
      "Loopback0"
    ],
    "as2dist2" : [
      "Loopback0"
    ],
    "as3border1" : [
      "Loopback0"
    ],
    "as3border2" : [
      "Loopback0"
    ],
    "as3core1" : [
      "Loopback0"
    ]
  },
  "inactive" : {
    "as2dept1" : [
      "Loopback0"
    ]
  },
  "running" : {
    "as1border1" : [
      "Loopback0"
    ],
    "as1border2" : [
      "Loopback0"
    ],
    "as1core1" : [
      "Loopback0"
    ],
    "as2border1" : [
      "Loopback0"
    ],
    "as2border2" : [
      "Loopback0"
    ],
    "as2core1" : [
      "Loopback0"
    ],
    "as2core2" : [
      "Loopback0"
    ],
    "as2dist1" : [
      "Loopback0"
    ],
    "as2dist2" : [
      "Loopback0"
    ],
    "as3border1" : [
      "Loopback0"
    ],
    "as3border2" : [
      "Loopback0"
    ],
    "as3core1" : [
      "Loopback0"
    ]
  }
}
################
# more interestingly, we can also ask questions about data flow, i.e., the end-to-end impact of all configuration
# for example, we can see how host1 reaches a particular IP address
# the query will take time if the dataplane has not been comptued before
Status: SUCCESS
Question: traceroute ingressNode=host1 | dstIp=1.0.2.2
Flow: ingress:host1 2.128.0.101->1.0.2.2 IP state:NEW
  environment:BASE
    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 3: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.2.0/24>]
    Hop 6: as1border1:FastEthernet0/0 -> as1core1:FastEthernet0/0 --- [OspfIntraAreaRoute<1.0.2.0/24>]
    ACCEPTED

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 3: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 4: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<1.0.2.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.2.0/24>]
    Hop 6: as1border1:FastEthernet0/0 -> as1core1:FastEthernet0/0 --- [OspfIntraAreaRoute<1.0.2.0/24>]
    ACCEPTED

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 3: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.2.0/24>]
    Hop 6: as1border1:FastEthernet0/0 -> as1core1:FastEthernet0/0 --- [OspfIntraAreaRoute<1.0.2.0/24>]
    ACCEPTED

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 3: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<1.0.2.0/24>]
    Hop 4: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<1.0.2.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.2.0/24>]
    Hop 6: as1border1:FastEthernet0/0 -> as1core1:FastEthernet0/0 --- [OspfIntraAreaRoute<1.0.2.0/24>]
    ACCEPTED


# (the macro above expands to "get traceroute ingressNode=host1 | dstIp=1.0.2.2")
# --> unlike a regular traceroute we show multipath and interface information
# suppose host1 (2.128.0.101) is running DNS and we want to ensure that the server is reachable
# can easily do this using protocol-specific traceroutes
Status: SUCCESS
Question: traceroute ingressNode=as2border1 | dstIp=2.128.0.101 | dstPort=53 | ipProtocol=UDP
Flow: ingress:as2border1 2.1.1.1->2.128.0.101 UDP sport:0 dport:DOMAIN(53) state:NEW
  environment:BASE
    Hop 1: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED


################
# while the above could be done using testing/emulation, we alone can be comprehensive
# for example, find *all* (starting node, packet header) combinations where the DNS server is unreachable
Status: SUCCESS
Question: reachability actions=[DROP] | dstPorts=[[53,53]] | dstIps=[2.128.0.101] | ipProtocols=[UDP]
Flow: ingress:as1border1 2.0.0.0->2.128.0.101 UDP sport:0 dport:DOMAIN(53) state:NEW
  environment:BASE
    Hop 1: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    DENIED_IN{OUTSIDE_TO_INSIDE}{deny ip 2.0.0.0 0.255.255.255 any}

Flow: ingress:as1border2 2.0.0.0->2.128.0.101 UDP sport:0 dport:DOMAIN(53) state:NEW
  environment:BASE
    Hop 1: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    DENIED_IN{OUTSIDE_TO_INSIDE}{deny ip 2.0.0.0 0.255.255.255 any}

Flow: ingress:as1core1 2.0.0.0->2.128.0.101 UDP sport:0 dport:DOMAIN(53) state:NEW
  environment:BASE
    Hop 1: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    DENIED_IN{OUTSIDE_TO_INSIDE}{deny ip 2.0.0.0 0.255.255.255 any}

Flow: ingress:as3border1 2.0.0.0->2.128.0.101 UDP sport:0 dport:DOMAIN(53) state:NEW
  environment:BASE
    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    DENIED_IN{OUTSIDE_TO_INSIDE}{deny ip 2.0.0.0 0.255.255.255 any}

Flow: ingress:as3border2 2.0.0.0->2.128.0.101 UDP sport:0 dport:DOMAIN(53) state:NEW
  environment:BASE
    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    DENIED_IN{OUTSIDE_TO_INSIDE}{deny ip 2.0.0.0 0.255.255.255 any}

Flow: ingress:as3core1 2.0.0.0->2.128.0.101 UDP sport:0 dport:DOMAIN(53) state:NEW
  environment:BASE
    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    DENIED_IN{OUTSIDE_TO_INSIDE}{deny ip 2.0.0.0 0.255.255.255 any}

Flow: ingress:host2 0.0.0.0->2.128.0.101 UDP sport:0 dport:DOMAIN(53) state:NEW
  environment:BASE
    Hop 1: host2:eth0 -> (none):null_interface --- [StaticRoute<0.0.0.0/0>]
    DENIED_OUT{filter::OUTPUT}{line:0}


# (macro expands to "get reachability dstPrefixes=["2.128.0.101/32"] | dstPortRange=["53-53"] | ipProtoRange=["17-17"] | actions=["drop"])
# --> the output shows outsiders with spoofed source addresses cannot reach the DNS server (good)
# --> but also shows that a bad ACL on host2 is blocking access (bad)
# another example: host2 (2.128.1.101) is running SSH. we can run similar queries to learn who cannot reach it
# but we can also ensure that non-ssh traffic can *never* reach host2
Status: SUCCESS
Question: reachability actions=[ACCEPT] | dstIps=[2.128.1.101] | notDstPorts=[[22,22]] | notIpProtocols=[TCP]
Flow: ingress:host2 0.0.0.0->2.128.1.101 ICMP icmpType:255 icmpCode:255 state:NEW
  environment:BASE
    ACCEPTED


# --> all good! hard to guarantee with testing but easy for us
# another example: we also want to ensure that outsiders can *never* reach the SSH server
# we have ACLs on as2's border routers to prevent this. to test that things are correctly implemented:
Status: SUCCESS
Question: reachability actions=[ACCEPT] | dstPorts=[[22,22]] | dstIps=[2.128.1.101] | ingressNodeRegex=.* | ipProtocols=[TCP]
Flow: ingress:as3border1 253.0.0.0->2.128.1.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 3: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 3: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 3: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 3: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED


# --> buggy ACL on as2border2!
#############
# comparing two sets of configs (e.g., current + planned) is a powerful debugging aid
# initialize the delta environment and generate its dataplane
Active delta testrig->environment is set
Status: SUCCESS
Question: null
{
  "class" : "org.batfish.datamodel.answers.ParseVendorConfigurationAnswerElement"
}
{
  "class" : "org.batfish.datamodel.answers.ConvertConfigurationAnswerElement",
  "undefinedReferences" : {
    "as2core2" : {
      "route-map" : [
        "filter-bogons"
      ]
    }
  },
  "unusedStructures" : {
    "as1border1" : {
      "bgp group" : [
        "as3"
      ],
      "community-list" : [
        "as1_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as1border2" : {
      "bgp group" : [
        "as2"
      ],
      "community-list" : [
        "as1_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as2border1" : {
      "bgp group" : [
        "as3"
      ],
      "community-list" : [
        "as2_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as2border2" : {
      "bgp group" : [
        "as1"
      ],
      "community-list" : [
        "as2_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as2dept1" : {
      "ip acl" : [
        "105"
      ]
    },
    "as2dist1" : {
      "ip acl" : [
        "102"
      ]
    },
    "as2dist2" : {
      "ip acl" : [
        "102"
      ]
    },
    "as3border1" : {
      "bgp group" : [
        "as1"
      ],
      "community-list" : [
        "as3_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    },
    "as3border2" : {
      "bgp group" : [
        "as2"
      ],
      "community-list" : [
        "as3_community"
      ],
      "prefix-list" : [
        "inbound_route_filter"
      ]
    }
  },
  "warnings" : {
    "as1border1" : {
      "Red flags" : {
        "1" : "MISCELLANEOUS: Could not determine update source for BGP neighbor: '3.2.2.2'",
        "2" : "MISCELLANEOUS: Could not determine update source for BGP neighbor: '5.6.7.8'",
        "3" : "UNUSED: Unused bgp peer-group/template: 'as3'",
        "4" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "5" : "UNUSED: Unused expanded community-list: 'as1_community'"
      }
    },
    "as1border2" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as2'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as1_community'"
      }
    },
    "as2border1" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as3'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as2_community'"
      }
    },
    "as2border2" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as1'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as2_community'"
      }
    },
    "as2core2" : {
      "Red flags" : {
        "1" : "UNDEFINED: neighbor: '2.1.1.1': group: 'as2': undefined reference to inbound route-map: 'filter-bogons'",
        "2" : "UNDEFINED: neighbor: '2.1.3.1': group: 'as2': undefined reference to inbound route-map: 'filter-bogons'",
        "3" : "UNDEFINED: neighbor: '2.1.1.2': group: 'as2': undefined reference to inbound route-map: 'filter-bogons'",
        "4" : "UNDEFINED: neighbor: '2.1.3.2': group: 'as2': undefined reference to inbound route-map: 'filter-bogons'"
      }
    },
    "as2dept1" : {
      "Red flags" : {
        "1" : "UNUSED: Unused extended access-list: '105'"
      }
    },
    "as2dist1" : {
      "Red flags" : {
        "1" : "UNUSED: Unused extended access-list: '102'"
      }
    },
    "as2dist2" : {
      "Red flags" : {
        "1" : "UNUSED: Unused extended access-list: '102'"
      }
    },
    "as3border1" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as1'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as3_community'"
      }
    },
    "as3border2" : {
      "Red flags" : {
        "1" : "UNUSED: Unused bgp peer-group/template: 'as2'",
        "2" : "UNUSED: Unused prefix-list: 'inbound_route_filter'",
        "3" : "UNUSED: Unused expanded community-list: 'as3_community'"
      }
    }
  }
}
Generating delta dataplane
Status: SUCCESS
Question: null
Computation summary:
   OSPF-internal iterations: 8
   Dependent-routes iterations: 8
   BGP iterations: 8
   Total routes: 301

Generated delta dataplane
# any earlier query can be executed differentially, to see if how behavior differs
Status: SUCCESS
Question: neighbors differential=true | node1Regex=.* | node2Regex=.* | neighborType=[]
{
  "class" : "org.batfish.datamodel.answers.JsonDiffAnswerElement",
  "jsonDiff" : { }
}
# a particularly powerful query: reachability diff between the two environments
Status: SUCCESS
Question: reachability differential=true | actions=[ACCEPT] | type=REDUCED_REACHABILITY
Flow: ingress:as1border1 253.0.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as1border2 253.0.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as1core1 253.0.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as2border1 253.123.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as2border2 253.127.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as2core1 253.123.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as2core2 253.127.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as2dept1 253.63.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as2dist1 253.127.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as2dist2 253.127.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 2: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as3border1 253.0.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 3: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as3border2 253.0.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 7: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

Flow: ingress:as3core1 253.0.0.0->2.128.0.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> host1:eth0 --- [ConnectedRoute<2.128.0.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}

    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 4: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/24>]
    Hop 6: as2dept1:FastEthernet1/0 -> (none):null_interface --- [ConnectedRoute<2.128.0.0/24>]
    DENIED_OUT{RESTRICT_HOST_TRAFFIC_IN}{deny ip any any}


# --> any collateral damage is easy to see
#############
# fault-tolerance can be ensured in a similar manner by studying the impact of failures
# this command creates a network view after an interface failure
Status: SUCCESS
Question: {
  "class" : "org.batfish.question.EnvironmentCreationQuestionPlugin$EnvironmentCreationQuestion",
  "environmentName" : "env_e4c8027e-13ac-48a2-9df5-6001b9c30906",
  "interfaceBlacklist" : [
    {
      "hostname" : "as2border2",
      "interface" : "FastEthernet0/0"
    }
  ]
}
New environment created from old environment with supplied parameters
Active delta testrig->environment is set 
# we can see if reachability changes at all after this failure
Status: SUCCESS
Question: reachability differential=true | actions=[ACCEPT] | type=REDUCED_REACHABILITY
Flow: ingress:as2border1 2.0.0.0->3.0.2.1 UDP sport:0 dport:0 state:NEW
  environment:BASE
    Hop 1: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 4: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [OspfIntraAreaRoute<3.0.2.0/24>]
    Hop 5: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [ConnectedRoute<3.0.2.0/24>]
    ACCEPTED

    Hop 1: as2border1:FastEthernet1/0 -> as2core2:FastEthernet0/1 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 4: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [OspfIntraAreaRoute<3.0.2.0/24>]
    Hop 5: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [ConnectedRoute<3.0.2.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.2.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

Flow: ingress:as2border2 2.0.0.0->3.0.1.1 UDP sport:0 dport:0 state:NEW
  environment:BASE
    Hop 1: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

Flow: ingress:as2core1 2.0.0.0->3.0.2.1 UDP sport:0 dport:0 state:NEW
  environment:BASE
    Hop 1: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [OspfIntraAreaRoute<3.0.2.0/24>]
    Hop 4: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [ConnectedRoute<3.0.2.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.2.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

Flow: ingress:as2core2 2.0.0.0->3.0.2.1 UDP sport:0 dport:0 state:NEW
  environment:BASE
    Hop 1: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [OspfIntraAreaRoute<3.0.2.0/24>]
    Hop 4: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [ConnectedRoute<3.0.2.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.2.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

Flow: ingress:as2dept1 2.0.0.0->3.0.1.1 UDP sport:0 dport:65484 state:NEW
  environment:BASE
    Hop 1: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    ACCEPTED

    Hop 1: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    ACCEPTED

    Hop 1: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    ACCEPTED

    Hop 1: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 2: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

Flow: ingress:as2dist1 2.0.0.0->3.0.2.1 UDP sport:0 dport:0 state:NEW
  environment:BASE
    Hop 1: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 4: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [OspfIntraAreaRoute<3.0.2.0/24>]
    Hop 5: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [ConnectedRoute<3.0.2.0/24>]
    ACCEPTED

    Hop 1: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 4: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [OspfIntraAreaRoute<3.0.2.0/24>]
    Hop 5: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [ConnectedRoute<3.0.2.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.2.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.2.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

Flow: ingress:as2dist2 2.0.0.0->3.0.2.1 UDP sport:0 dport:0 state:NEW
  environment:BASE
    Hop 1: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 4: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [OspfIntraAreaRoute<3.0.2.0/24>]
    Hop 5: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [ConnectedRoute<3.0.2.0/24>]
    ACCEPTED

    Hop 1: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 4: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [OspfIntraAreaRoute<3.0.2.0/24>]
    Hop 5: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [ConnectedRoute<3.0.2.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.2.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<3.0.2.0/24>]
    Hop 2: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.2.0/24>]
    Hop 3: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.2.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

Flow: ingress:as3border1 253.0.0.0->2.128.1.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 3: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 3: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 3: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 3: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border2:FastEthernet0/1 -> as1border2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 5: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 6: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    DENIED_IN{OUTSIDE_TO_INSIDE}{deny ip any host 2.128.1.101}

Flow: ingress:as3border2 253.0.0.0->2.128.1.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 7: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 7: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 6: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 7: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3border2:FastEthernet0/0 -> as3core1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 6: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 7: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as3border2:FastEthernet0/1 -> as1border2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    DENIED_IN{OUTSIDE_TO_INSIDE}{deny ip any host 2.128.1.101}

Flow: ingress:as3core1 253.0.0.0->2.128.1.101 TCP sport:0 dport:SSH(22) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2core1:FastEthernet1/0 -> as2dist2:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 6: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2core1:FastEthernet2/0 -> as2dist1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 6: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dist1:FastEthernet1/0 -> as2dept1:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 6: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

    Hop 1: as3core1:FastEthernet0/1 -> as3border1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border1:FastEthernet0/0 -> as2border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as2border2:FastEthernet1/0 -> as2core2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 4: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [BgpRoute<2.128.1.0/24>]
    Hop 5: as2dist2:FastEthernet1/0 -> as2dept1:FastEthernet0/1 --- [BgpRoute<2.128.1.0/24>]
    Hop 6: as2dept1:FastEthernet1/1 -> host2:eth0 --- [ConnectedRoute<2.128.1.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: as3core1:FastEthernet0/0 -> as3border2:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 2: as3border2:FastEthernet0/1 -> as1border2:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 3: as1border2:FastEthernet0/0 -> as1core1:FastEthernet0/1 --- [BgpRoute<2.128.0.0/16>]
    Hop 4: as1core1:FastEthernet0/0 -> as1border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    Hop 5: as1border1:FastEthernet0/1 -> as2border1:FastEthernet0/0 --- [BgpRoute<2.128.0.0/16>]
    DENIED_IN{OUTSIDE_TO_INSIDE}{deny ip any host 2.128.1.101}

Flow: ingress:host1 2.128.0.0->3.0.1.2 UDP sport:0 dport:0 state:NEW
  environment:BASE
    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 6: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [ConnectedRoute<3.0.1.0/24>]
    ACCEPTED

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 6: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [ConnectedRoute<3.0.1.0/24>]
    ACCEPTED

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 6: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [ConnectedRoute<3.0.1.0/24>]
    ACCEPTED

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 6: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [ConnectedRoute<3.0.1.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

Flow: ingress:host2 2.128.0.0->3.0.1.2 ICMP icmpType:255 icmpCode:255 state:NEW
  environment:BASE
    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 6: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [ConnectedRoute<3.0.1.0/24>]
    ACCEPTED

    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 6: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [ConnectedRoute<3.0.1.0/24>]
    ACCEPTED

    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 6: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [ConnectedRoute<3.0.1.0/24>]
    ACCEPTED

    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core1:FastEthernet0/1 -> as2border2:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border2:FastEthernet0/0 -> as3border1:FastEthernet0/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 6: as3border1:FastEthernet0/1 -> as3core1:FastEthernet0/1 --- [ConnectedRoute<3.0.1.0/24>]
    ACCEPTED

  environment:DELTA
    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}

    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<3.0.1.0/24>]
    Hop 4: as2core1:FastEthernet0/0 -> as2border1:FastEthernet0/1 --- [BgpRoute<3.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> (none):null_interface --- [BgpRoute<3.0.1.0/24>]
    DENIED_OUT{INSIDE_TO_OUTSIDE}{deny ip any any}


# --> any lack of fault tolerance is easy to see
##############
# finally, sanity checking can be done in the data plane too (e.g., valley-free routing in the DC, number of hops)
# a powerful example: multipath consistency.
Status: SUCCESS
Question: reachability actions=[ACCEPT] | type=MULTIPATH
Flow: ingress:as2core2 0.0.0.0->2.1.2.1 TCP sport:0 dport:TELNET(23) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2core2:FastEthernet0/0 -> as2border2:FastEthernet1/0 --- [OspfIntraAreaRoute<2.1.2.1/32>]
    Hop 2: as2border2:FastEthernet0/1 -> as2core1:FastEthernet0/1 --- [OspfIntraAreaRoute<2.1.2.1/32>]
    ACCEPTED

    Hop 1: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [OspfIntraAreaRoute<2.1.2.1/32>]
    Hop 2: as2border1:FastEthernet0/1 -> as2core1:FastEthernet0/0 --- [OspfIntraAreaRoute<2.1.2.1/32>]
    ACCEPTED

    Hop 1: as2core2:FastEthernet1/0 -> as2dist1:FastEthernet0/0 --- [OspfIntraAreaRoute<2.1.2.1/32>]
    Hop 2: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [OspfIntraAreaRoute<2.1.2.1/32>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}

    Hop 1: as2core2:FastEthernet2/0 -> as2dist2:FastEthernet0/0 --- [OspfIntraAreaRoute<2.1.2.1/32>]
    Hop 2: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [OspfIntraAreaRoute<2.1.2.1/32>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}

Flow: ingress:as2dept1 2.0.0.0->1.0.1.1 TCP sport:0 dport:TELNET(23) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 2: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 4: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.1.0/24>]
    ACCEPTED

    Hop 1: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 2: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<1.0.1.0/24>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}

    Hop 1: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 2: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 4: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.1.0/24>]
    ACCEPTED

    Hop 1: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 2: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}

Flow: ingress:as2dist1 2.0.0.0->2.1.1.1 TCP sport:0 dport:TELNET(23) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [OspfIntraAreaRoute<2.1.1.1/32>]
    Hop 2: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [OspfIntraAreaRoute<2.1.1.1/32>]
    ACCEPTED

    Hop 1: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [OspfIntraAreaRoute<2.1.1.1/32>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}

Flow: ingress:as2dist2 2.0.0.0->2.1.1.1 TCP sport:0 dport:TELNET(23) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [OspfIntraAreaRoute<2.1.1.1/32>]
    Hop 2: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [OspfIntraAreaRoute<2.1.1.1/32>]
    ACCEPTED

    Hop 1: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [OspfIntraAreaRoute<2.1.1.1/32>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}

Flow: ingress:host1 2.128.0.0->1.0.1.1 TCP sport:0 dport:TELNET(23) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.1.0/24>]
    ACCEPTED

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<1.0.1.0/24>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.1.0/24>]
    ACCEPTED

    Hop 1: host1:eth0 -> as2dept1:FastEthernet1/0 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}

Flow: ingress:host2 2.128.0.0->1.0.1.1 TCP sport:0 dport:TELNET(23) state:NEW tcpFlags:00000000
  environment:BASE
    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/0 -> as2core2:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.1.0/24>]
    ACCEPTED

    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/0 -> as2dist1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2dist1:FastEthernet0/1 -> as2core1:FastEthernet2/0 --- [BgpRoute<1.0.1.0/24>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}

    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/0 -> as2core2:FastEthernet2/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 4: as2core2:FastEthernet0/1 -> as2border1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 5: as2border1:FastEthernet0/0 -> as1border1:FastEthernet0/1 --- [BgpRoute<1.0.1.0/24>]
    ACCEPTED

    Hop 1: host2:eth0 -> as2dept1:FastEthernet1/1 --- [StaticRoute<0.0.0.0/0>]
    Hop 2: as2dept1:FastEthernet0/1 -> as2dist2:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    Hop 3: as2dist2:FastEthernet0/1 -> as2core1:FastEthernet1/0 --- [BgpRoute<1.0.1.0/24>]
    DENIED_IN{blocktelnet}{deny   tcp any any eq telnet}


# --> will catch hard-to-debug, bad interactions between routing and ACLs
