block(`DataPlane_rules) {
   alias_all(`libbatfish:DataPlane),
   alias_all(`libbatfish:Interface),
   alias_all(`libbatfish:Ip),
   alias_all(`libbatfish:Route),
   clauses(`{
// BEGIN CODE

FibForward(node, ip, interface) <-
   !HasIp(node, ip),
   LongestPrefixNetworkMatch(node, ip, matchNet),
   InstalledRoute(route),
   Route_network[route] = matchNet,
   Route_node[route] = node,
   (
      (
         // ConnectedRoute(node, matchNet, interface)
         InterfaceRoute(route),
         InterfaceRoute_nextHopInt[route] = interface
      ) ;
      (
         !InterfaceRoute(route),
         Route_nextHopIp[route] = routeNextHopIp,
         FibForward(node, routeNextHopIp, interface)
      )
   ).

FibNetworkForward(node, network, interface) <-
   InstalledRoute(route),
   Route_node[route] = node,
   Route_network[route] = network,
   (
      (
         InterfaceRoute(route),
         InterfaceRoute_nextHopInt[route] = interface
      ) ;
      (
         !InterfaceRoute(route),
         Route_nextHopIp[route] = nextHopIp,
         FibForward(node, nextHopIp, interface)
      )
   ).

// END CODE
   })
} <-- .

