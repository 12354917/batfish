block(`GeneratedRoute_rules) {
   alias_all(`libbatfish:GeneratedRoute),
   alias_all(`libbatfish:Ip),
   alias_all(`libbatfish:Node),
   alias_all(`libbatfish:PolicyMap),
   alias_all(`libbatfish:Route),
   clauses(`{
// BEGIN CODE

ActiveGeneratedRoute(route, contributingRoute) <-
   GeneratedRoute(route),
   GeneratedRoutePolicy(route, policy),
   InstalledRoute(contributingRoute),
   Route_network[contributingRoute] = contributingNetwork,
   Route_network[route] = network,
   Route_node[contributingRoute] = node,
   Route_node[route] = node,
   Network_address[contributingNetwork] = contributingAddress,
   Network_address[network] = startAddress,
   Network_end[network] = endAddress,
   startAddress < contributingAddress <= endAddress,
   PolicyMapPermitRoute(policy, _, contributingRoute).

BestGeneratedRoute(route),
   Route_nextHopIp[route] = nextHopIp
<-
   MinAdminContributingRoute(route, contributingRoute),
   Route_network[contributingRoute] = contributingNetwork,
   Route_nextHopIp[contributingRoute] = nextHopIp,
   Network_address[contributingNetwork] = contributingAddress,
   MinContributingRouteAddress[route] = contributingAddress.

BestPerProtocolRoute(route) <-
   BestGeneratedRoute(route).

GeneratedRoute(route),
   Route(route),
   GeneratedRoute_constructor[node, network] = route,
   Route_admin[route] = admin,
   Route_cost[route] = cost,
   Route_network[route] = network,
   Route_node[route] = node,
   Route_protocol[route] = protocol
<-
   SetGeneratedRoute(node, network, admin),
   cost = 0,
   protocol = RoutingProtocol_AGGREGATE[].
   
GeneratedRoutePolicy(route, policy) <-
   GeneratedRoute(route),
   Route_network[route] = network,
   Route_node[route] = node,
   SetGeneratedRoutePolicy(node, network, policy).

MinAdminContributingRoute(route, contributingRoute) <-
   ActiveGeneratedRoute(route, contributingRoute),
   Route_admin[contributingRoute] = admin,
   MinContributingRouteAdmin[route] = admin.
   
MinContributingRouteAddress[route] = minAddress <-
   agg<<minAddress = min(address)>>
      MinAdminContributingRoute(route, contributingRoute),
      Route_network[contributingRoute] = network,
      Network_address[network] = address.
   
MinContributingRouteAdmin[route] = minAdmin <-
   agg<<minAdmin = min(admin)>>
      ActiveGeneratedRoute(route, contributingRoute),
      Route_admin[contributingRoute] = admin.

need_PolicyMapMatchRoute(map, route) <-
   SetGeneratedRoutePolicy(node, _, map),
   InstalledRoute(route),
   Route_node[route] = node.

SetGeneratedRoute(node, network, admin) <-
   SetGeneratedRoute_flat(node, network_start, network_end, prefix_length, admin),
   Network_constructor[network_start, network_end, prefix_length] = network.

SetGeneratedRoutePolicy(node, network, map) <-
   SetGeneratedRoutePolicy_flat(node, network_start, network_end, prefix_length, map),
   Network_constructor[network_start, network_end, prefix_length] = network.

// END CODE
   })
} <-- .

