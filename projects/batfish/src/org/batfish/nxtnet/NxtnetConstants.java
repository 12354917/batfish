package org.batfish.nxtnet;

public class NxtnetConstants {

   public static final String[] DATA_PLANE_QUERY_INPUT_COMMON_FACTS = new String[] {
         "SamePhysicalSegment",
         "SetActiveInt",
         "SetAsPathLineDeny",
         "SetAsPathLineMatchAs",
         "SetAsPathLineMatchAsAtBeginning",
         "SetAsPathLineMatchAsPair",
         "SetAsPathLineMatchAsPairAtBeginning",
         "SetAsPathLineMatchEmpty",
         "SetAsPathLinePermit",
         "SetCommunityListLine",
         "SetCommunityListLinePermit",
         "SetFakeInterface",
         "SetFlowSinkInterface",
         "SetInterfaceFilterIn",
         "SetInterfaceFilterOut",
         "SetInterfaceRoutingPolicy",
         "SetIpAccessListLine_deny",
         "SetIpAccessListLine_dstIpRange",
         "SetIpAccessListLine_dstPortRange",
         "SetIpAccessListLine_permit",
         "SetIpAccessListLine_protocol",
         "SetIpAccessListLine_srcIpRange",
         "SetIpAccessListLine_srcPortRange",
         "SetIpInt",
         "SetLinkLoadLimitIn",
         "SetLinkLoadLimitOut",
         "SetLocalAs_flat",
         "SetNetwork",
         "SetNodeRole",
         "SetNodeVendor",
         "SetPolicyMapClauseAddCommunity",
         "SetPolicyMapClauseDeleteCommunity",
         "SetPolicyMapClauseDeny",
         "SetPolicyMapClauseMatchAcl",
         "SetPolicyMapClauseMatchAsPath",
         "SetPolicyMapClauseMatchColor",
         "SetPolicyMapClauseMatchCommunityList",
         "SetPolicyMapClauseMatchInterface",
         "SetPolicyMapClauseMatchNeighbor",
         "SetPolicyMapClauseMatchPolicy",
         "SetPolicyMapClauseMatchProtocol",
         "SetPolicyMapClauseMatchRouteFilter",
         "SetPolicyMapClauseMatchTag",
         "SetPolicyMapClausePermit",
         "SetPolicyMapClauseSetCommunity",
         "SetPolicyMapClauseSetCommunityNone",
         "SetPolicyMapClauseSetLocalPreference",
         "SetPolicyMapClauseSetMetric",
         "SetPolicyMapClauseSetNextHopIp",
         "SetPolicyMapClauseSetOriginType",
         "SetPolicyMapClauseSetProtocol",
         "SetPolicyMapIsisExternalRouteType",
         "SetPolicyMapOspfExternalRouteType",
         "SetPrecomputedRoute_flat",
         "SetRouteFilterLine",
         "SetRouteFilterPermitLine",
         "SetStaticIntRoute_flat",
         "SetSwitchportAccess",
         "SetSwitchportTrunkAllows",
         "SetSwitchportTrunkEncapsulation",
         "SetSwitchportTrunkNative",
         "SetVlanInterface" };

   public static final String[] DATA_PLANE_QUERY_INPUT_FLOW_FACTS = new String[] {
         "SetFlowOriginate",
         "DuplicateRoleFlows" };

   public static final String[] NXTNET_DATA_PLANE_OUTPUT_SYMBOLS = {
         "AdvertisementCommunity",
         "AdvertisementPath",
         "AdvertisementPathSize",
         "BgpAdvertisement_dstIp",
         "BgpAdvertisement_dstNode",
         "BgpAdvertisement_localPref",
         "BgpAdvertisement_med",
         "BgpAdvertisement_network",
         "BgpAdvertisement_nextHopIp",
         "BgpAdvertisement_originatorIp",
         "BgpAdvertisement_originType",
         "BgpAdvertisement_srcIp",
         "BgpAdvertisement_srcNode",
         "BgpAdvertisement_srcProtocol",
         "BgpAdvertisement_type",
         "FibForwardPolicyRouteNextHopIp",
         "FibNetwork",
         "Flow_dstIp",
         "Flow_dstPort",
         "Flow_ipProtocol",
         "Flow_node",
         "Flow_srcIp",
         "Flow_srcPort",
         "Flow_tag",
         "Network_index",
         "Route",
         "RouteDetails_admin",
         "RouteDetails_cost",
         "RouteDetails_nextHop",
         "RouteDetails_nextHopInt",
         "RouteDetails_nextHopIp",
         "RouteDetails_tag",
         "Route_network",
         "Route_node",
         "Route_protocol",
         "InterfaceRoute_nextHopInt",
         "SetFlowSinkInterface",
         "FlowPathHistory",
         "InstalledRoute",
         "ReceivedBgpAdvertisement" };

   public static final String[] NXTNET_ENTITY_SYMBOLS = {
         "AdvertisementCommunity",
         "AdvertisementPath",
         "AdvertisementPathSize",
         "BgpAdvertisement_dstIp",
         "BgpAdvertisement_dstNode",
         "BgpAdvertisement_localPref",
         "BgpAdvertisement_med",
         "BgpAdvertisement_network",
         "BgpAdvertisement_nextHopIp",
         "BgpAdvertisement_originatorIp",
         "BgpAdvertisement_originType",
         "BgpAdvertisement_srcIp",
         "BgpAdvertisement_srcNode",
         "BgpAdvertisement_srcProtocol",
         "BgpAdvertisement_type",
         "Flow_dstIp",
         "Flow_dstPort",
         "Flow_ipProtocol",
         "Flow_node",
         "Flow_srcIp",
         "Flow_srcPort",
         "Flow_tag",
         "Network_index",
         "Route",
         "RouteDetails_admin",
         "RouteDetails_cost",
         "RouteDetails_nextHop",
         "RouteDetails_nextHopInt",
         "RouteDetails_nextHopIp",
         "RouteDetails_tag",
         "Route_network",
         "Route_node",
         "Route_protocol" };

   public static final String[] NXTNET_FLOW_OUTPUT_SYMBOLS = { "FlowPathHistory" };

}
