<project name="Batfish" basedir="." default="all">
   <!-- import ant-contrib -->
   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <pathelement location="ant-contrib/ant-contrib-dev.jar"/>
      </classpath>
   </taskdef>

   <!-- import ant-doxygen -->
   <taskdef resource="org/doxygen/tools/antlib.xml">
      <classpath>
         <pathelement location="ant-doxygen/ant_doxygen.jar" />
      </classpath>
   </taskdef>

   <!-- import and configure one-jar -->
   <property name="one-jar.dir" location="one-jar"/>
   <import file="${one-jar.dir}/build.onejar.xml"/>
	<property name="eclipse.jar-in-jar.dir" value="build-lib/eclipse"/>
	<property name="temp.dir" value="temp" />	
   <path id="libraries">
      <fileset dir="lib" includes="**/*.jar"/>
      <fileset dir="../batfish-common-protocol/lib" includes="**/*.jar"/>
      <pathelement location="../batfish-common-protocol/bin"/>
      <fileset dir="../coordinator/lib" includes="**/*.jar"/>
      <pathelement location="../coordinator/bin"/>
      <fileset dir="../batfish-client/lib" includes="**/*.jar"/>
      <pathelement location="../batfish-client/bin"/>
      <fileset dir="../batfish/lib" includes="**/*.jar"/>
      <pathelement location="../batfish/bin"/>
   </path>
   <property name="outputJar" value="out/allinone.jar"/>

   <target name="all" depends="jar,copyconfig,copycertificate" description="Build everything"/>

   <!-- Check to see if anything that would be packaged for distribution has changed -->
   <target name="checkJarBuild" depends="compile">
      <uptodate property="jarBuild.notRequired" targetfile="${outputJar}">
         <srcfiles dir="bin" includes="**/*"/>
         <srcfiles dir="lib" includes="**/*"/>
         <srcfiles dir="../batfish-common-protocol/out" includes="batfish-common-protocol.jar"/>
         <srcfiles dir="../batfish/bin" includes="**/*"/>
         <srcfiles dir="../batfish/lib" includes="**/*"/>
         <srcfiles dir="../batfish-client/bin" includes="**/*"/>
         <srcfiles dir="../batfish-client/lib" includes="**/*"/>
         <srcfiles dir="../coordinator/bin" includes="**/*"/>
         <srcfiles dir="../coordinator/lib" includes="**/*"/>
      </uptodate>
   </target>

   <target name="clean" depends="compileclean" description="Delete all intermediate files"/>

   <target name="compile"
    description=
     "Compile all Java files">
      <mkdir dir="bin"/>
      <javac destdir="bin" includes="**/*.java" debug="true" includeantruntime="false" source="1.7" target="1.7">
      	 <src path="src" />
         <classpath refid="libraries" />
         <classpath refid="one-jar.libraries"/>
         <classpath path="${one-jar.ant.jar}"/>
      </javac>
	</target>

	<target name="compileclean" description="Delete all compiled Java classes and copied logic">
		<delete dir="bin" />
	</target>


   <target name="copycertificate" description="Copy self-signed certificate file to output directory">
      <copy todir="out">
         <fileset dir="../coordinator/out" includes="selfsigned.jks"/>
      </copy>
   </target>

   <target name="copyconfig" description="Copy configuration file to output directory">
      <copy todir="bin">
         <fileset dir="src" includes="**/allinone.properties"/>
      </copy>
      <copy todir="out">
         <fileset dir="src/org/batfish/allinone/config" includes="allinone.properties"/>
         <fileset dir="../batfish/bin/org/batfish/config" includes="batfish.properties"/>
         <fileset dir="../batfish-client/bin/org/batfish/client/config" includes="client.properties"/>
         <fileset dir="../coordinator/bin/org/batfish/coordinator/config" includes="coordinator.properties"/>
      </copy>
   </target>

   <target name="distclean" depends="clean"
    description=
     "Delete everything generated by build process, and documentation">
      <delete dir="out"/>
      <delete dir="doc"/>
	</target>

   <target name="doc">
      <sequential>
         <mkdir dir="doc/html"/>
         <outofdate>
            <sourcefiles>
               <fileset dir="src" includes="**/*.java"/>
               <fileset dir="." includes="doxygen.cfg"/>
            </sourcefiles>
            <targetfiles>
               <fileset dir="doc/html" includes="index.html"/>
            </targetfiles>
            <sequential>
               <loadfile srcfile=".gitignore" property="doxygen.ignore.files">
                  <filterchain>
                     <prefixlines prefix="*/" />
                     <tokenfilter delimOutput=" ">
                        <linetokenizer/>
                     </tokenfilter>
                  </filterchain>
               </loadfile>
               <doxygen configFilename="doxygen.cfg" verbose="true">
                  <property name="EXCLUDE_PATTERNS" value="${doxygen.ignore.files}"/>
               </doxygen>
            </sequential>
         </outofdate>
      </sequential>
   </target>

   <target name="jar" depends="checkJarBuild" unless="jarBuild.notRequired"
     description="Produce distribution all-in-one jar">
      <mkdir dir="out"/>
      <one-jar destfile="${outputJar}">
         <manifest>
            <attribute name="Main-Class" value="org.batfish.main.Boot"/>
            <attribute name="One-Jar-Main-Class" value="org.batfish.allinone.Main"/>
            <attribute name="One-Jar-URL-Factory" value="com.simontuffs.onejar.JarClassLoader$OneJarURLFactory"/>
         </manifest>
         <main>
            <fileset dir="bin"/>
            <fileset dir="../batfish/bin"/>
            <fileset dir="../batfish-client/bin"/>
            <fileset dir="../coordinator/bin"/>
         </main>
         <lib>
            <fileset dir="lib" includes="**/*" />
            <fileset dir="../batfish-common-protocol/out" includes="batfish-common-protocol.jar"/>
            <fileset dir="../batfish/lib" includes="**/*"/>
            <fileset dir="../batfish-client/lib" includes="**/*"/>
            <fileset dir="../coordinator/lib" includes="**/*"/>
         </lib>
		</one-jar>
		<delete dir="${temp.dir}" />
	</target>

</project>

