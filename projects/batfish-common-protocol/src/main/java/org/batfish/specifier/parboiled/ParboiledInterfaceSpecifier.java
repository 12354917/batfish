package org.batfish.specifier.parboiled;

import java.util.Objects;
import java.util.Set;
import org.batfish.datamodel.Interface;
import org.batfish.specifier.InterfaceSpecifier;
import org.batfish.specifier.SpecifierContext;

/** An {@link InterfaceSpecifier} that resolves based on the AST generated by {@link Parser}. */
final class ParboiledInterfaceSpecifier implements InterfaceSpecifier {
  private final InterfaceAstNode _ast;

  ParboiledInterfaceSpecifier(InterfaceAstNode ast) {
    _ast = ast;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (!(o instanceof ParboiledInterfaceSpecifier)) {
      return false;
    }
    return Objects.equals(_ast, ((ParboiledInterfaceSpecifier) o)._ast);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_ast);
  }

  @Override
  public Set<Interface> resolve(Set<String> nodes, SpecifierContext ctxt) {
    // TODO TODO TODO
    return null;
  }
}
