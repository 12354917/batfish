I. PREREQUISITES:
   1. Visual Studio (for building z3)
   2. GNU Parallel (for building batfish)


II. Symlink issues
Java (and therefore ant) under cygwin does not understand symlinks. As part of the build process, all symlink targets are copied over their respective symlinks with a call to:
batfish_replace_symlinks
So if you need to add symlinks to the repository, make sure to add them to the git index with 'git add' before running any build commands, or they will be replaced with their targets.

It is suggested that the following lines be added to ~/.gitconfig to avoid other symlink / windows-line-ending issues:

[core]
   symlinks = true
   autocrlf = false

III. Building Z3 (in addition to steps in main README)
The Z3 java dlls required for certain tasks will not be properly installed by ONLY following the instructions for building z3 in the main README.
******IN ADDITION, BUT NOT INSTEAD****** you must do the following from the Visual Studio command prompt, using a **FRESH** working copy of the z3 master branch separate from the working copy used for building in Cygwin:

1. Install Visual Studio (Express is fine). Minimally, you will need to make sure the feature set you include provides nmake, the Visual Studio command prompt, and C++ compiler.

2.
cd <z3-source-root>

3a. ONLY FOR 32-bit JDK
python scripts/mk_make.py --java

3b. ONLY FOR 64-bit JDK
python scripts/mk_make.py --java -x64

4.
cd build
nmake

5a. ONLY FOR 32-bit JDK on 32-bit windows or 64-bit JDK on 64-bit windows
copy *.dll %WINDIR%\system32\
c:
cd %WINDIR%\system32
copy libz3.dll z3.dll
copy libz3java.dll z3java.dll

5b. ONLY FOR 32-bit JDK on 64-bit windows
copy *.dll %WINDIR%\syswow64\
c:
cd %WINDIR%\syswow64
copy libz3.dll z3.dll
copy libz3java.dll z3java.dll

If you compile on a machine different from the one you run it in, make sure that the right version of c++ redistributable is present on the running machine. download and install these redistributable packages from the web.
